<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0114.1153                               -->
<workbook original-version='18.1' source-build='2024.3.3 (20243.25.0114.1153)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='results' inline='true' name='federated.0e8n4vv1mplld015qn8wr061pd9e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='results' name='textscan.1bk3x0u1yv9qlt11ba4wa0wy7b0c'>
            <connection class='textscan' directory='C:/Users/hoped/Desktop/6.793/project/vascular-llm-qa/data' filename='results.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1bk3x0u1yv9qlt11ba4wa0wy7b0c' name='results.csv' table='[results#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Model' ordinal='1' />
            <column datatype='string' name='Train' ordinal='2' />
            <column datatype='string' name='Question ID' ordinal='3' />
            <column datatype='integer' name='Correct' ordinal='4' />
            <column datatype='string' name='Source' ordinal='5' />
            <column datatype='string' name='Topic' ordinal='6' />
            <column datatype='string' name='Labels' ordinal='7' />
            <column datatype='integer' name='Case Study' ordinal='8' />
            <column datatype='integer' name='Test Question' ordinal='9' />
            <column datatype='integer' name='Num Choices' ordinal='10' />
            <column datatype='integer' name='Num Correct' ordinal='11' />
            <column datatype='integer' name='APDVS' ordinal='12' />
            <column datatype='integer' name='CC1' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[results.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Train</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Train]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Train</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Question ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Question ID]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Question ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Correct</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Correct]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Correct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Topic</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Topic]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Topic</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Labels</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Labels]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Labels</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Case Study</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Case Study]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Case Study</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Test Question</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Test Question]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Test Question</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Num Choices</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Num Choices]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Num Choices</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Num Correct</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Num Correct]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>Num Correct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>APDVS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[APDVS]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>APDVS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CC1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CC1]</local-name>
            <parent-name>[results.csv]</parent-name>
            <remote-alias>CC1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Apdvs' datatype='integer' name='[APDVS]' role='measure' type='quantitative' />
      <column caption='1 Correct Choice' datatype='integer' name='[CC1]' role='measure' type='quantitative' />
      <column caption='Model_Train' datatype='string' name='[Calculation_1508987358238863360]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Model] + &quot; &quot; + [Train]' />
      </column>
      <column caption='Case_Num' datatype='string' name='[Calculation_1508987358244704257]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([Case Study]) + &quot; &quot; + STR([Num Correct])' />
      </column>
      <column caption='APDVS' datatype='boolean' name='[Calculation_1508987358246354946]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Source] == &quot;apdvs&quot;' />
        <aliases>
          <alias key='false' value='Other' />
          <alias key='true' value='APDVS' />
        </aliases>
      </column>
      <column caption='One Correct Choice' datatype='boolean' name='[Calculation_1508987358276337667]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Num Correct] == 1' />
        <aliases>
          <alias key='false' value='&gt; 1' />
          <alias key='true' value='1 Choice' />
        </aliases>
      </column>
      <column caption='Accuracy' datatype='integer' name='[Calculation_1508987358556037124]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100*[Correct]' />
      </column>
      <column datatype='integer' name='[Case Study]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Model]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
          <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
          <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
          <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
          <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
          <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
        </aliases>
      </column>
      <column caption='Num Correct1' datatype='integer' name='[Num Correct]' role='measure' type='quantitative' />
      <column datatype='string' name='[Train]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
          <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
          <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
          <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
          <alias key='&quot;RAG_100&quot;' value='RAG100' />
          <alias key='&quot;RAG_500&quot;' value='RAG500' />
        </aliases>
      </column>
      <column caption='results.csv' datatype='table' name='[__tableau_internal_object_id__].[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]' role='measure' type='quantitative' />
      <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
      <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hoped/AppData/Local/Temp/TableauTemp/#TableauTemp_168z2pa0aujnh61cmtett0ajmf35.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/09/2025 06:44:39 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>results.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7904</approx-count>
              <contains-null>true</contains-null>
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model</remote-alias>
              <ordinal>1</ordinal>
              <family>results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Train</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Train]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Train</remote-alias>
              <ordinal>2</ordinal>
              <family>results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Question ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Question ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Question ID</remote-alias>
              <ordinal>3</ordinal>
              <family>results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>635</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Correct</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Correct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Correct</remote-alias>
              <ordinal>4</ordinal>
              <family>results.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Source</remote-alias>
              <ordinal>5</ordinal>
              <family>results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Topic</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Topic]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Topic</remote-alias>
              <ordinal>6</ordinal>
              <family>results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Labels</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Labels]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Labels</remote-alias>
              <ordinal>7</ordinal>
              <family>results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Case Study</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Case Study]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Case Study</remote-alias>
              <ordinal>8</ordinal>
              <family>results.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Test Question</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Test Question]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Test Question</remote-alias>
              <ordinal>9</ordinal>
              <family>results.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Num Choices</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Num Choices]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Num Choices</remote-alias>
              <ordinal>10</ordinal>
              <family>results.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Num Correct</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Num Correct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Num Correct</remote-alias>
              <ordinal>11</ordinal>
              <family>results.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>APDVS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[APDVS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>APDVS</remote-alias>
              <ordinal>12</ordinal>
              <family>results.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CC1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CC1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CC1</remote-alias>
              <ordinal>13</ordinal>
              <family>results.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[results.csv_A0FFEB5CCD984F34AF1854648995BBB0]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Model:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Train:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;base&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RAFT_500&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;RAFT_100_gpt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RAFT_100&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RAG_500&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;RAFT_500_gpt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RAG_100&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='results.csv' id='results.csv_A0FFEB5CCD984F34AF1854648995BBB0'>
            <properties context=''>
              <relation connection='textscan.1bk3x0u1yv9qlt11ba4wa0wy7b0c' name='results.csv' table='[results#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Model' ordinal='1' />
                  <column datatype='string' name='Train' ordinal='2' />
                  <column datatype='string' name='Question ID' ordinal='3' />
                  <column datatype='integer' name='Correct' ordinal='4' />
                  <column datatype='string' name='Source' ordinal='5' />
                  <column datatype='string' name='Topic' ordinal='6' />
                  <column datatype='string' name='Labels' ordinal='7' />
                  <column datatype='integer' name='Case Study' ordinal='8' />
                  <column datatype='integer' name='Test Question' ordinal='9' />
                  <column datatype='integer' name='Num Choices' ordinal='10' />
                  <column datatype='integer' name='Num Correct' ordinal='11' />
                  <column datatype='integer' name='APDVS' ordinal='12' />
                  <column datatype='integer' name='CC1' ordinal='13' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Base'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Base Evaluation Results N=451</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column caption='Accuracy' datatype='integer' name='[Calculation_1508987358556037124]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*[Correct]' />
            </column>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1508987358556037124]' derivation='Avg' name='[avg:Calculation_1508987358556037124:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]' scope='rows' value='% Accuracy' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' value='142' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]</rows>
        <cols>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</cols>
      </table>
      <simple-id uuid='{6638B430-0213-4893-83A1-A2C9C7394537}' />
    </worksheet>
    <worksheet name='Base_Num_Correct'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Base Evaluation Results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column caption='Num Correct1' datatype='integer' name='[Num Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Correct]' derivation='Avg' name='[avg:Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Num Correct]' derivation='None' name='[none:Num Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Model:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Topic:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Correct:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>Num Q:  &lt;CNT(Correct)&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] * [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Num Correct:qk])</cols>
      </table>
      <simple-id uuid='{8A40A94F-AC08-465F-AF7A-0430BAF67CCD}' />
    </worksheet>
    <worksheet name='Base_Num_Correct (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>Base Model Performace Comparsion by Number of Correct Choices N=451</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column caption='One Correct Choice' datatype='boolean' name='[Calculation_1508987358276337667]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Num Correct] == 1' />
              <aliases>
                <alias key='false' value='&gt; 1' />
                <alias key='true' value='1 Choice' />
              </aliases>
            </column>
            <column caption='Accuracy' datatype='integer' name='[Calculation_1508987358556037124]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*[Correct]' />
            </column>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column caption='Num Correct1' datatype='integer' name='[Num Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1508987358556037124]' derivation='Avg' name='[avg:Calculation_1508987358556037124:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1508987358276337667]' derivation='None' name='[none:Calculation_1508987358276337667:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358276337667:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]' scope='rows' value='% Accuracy' />
            <encoding attr='space' class='0' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]' field-type='quantitative' max='100.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Model:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Topic:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Correct:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>Num Q:  &lt;CNT(Correct)&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] / [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358276337667:nk])</cols>
      </table>
      <simple-id uuid='{95D1E8A5-7A75-4DD0-9AA4-3B4ECDC16A6E}' />
    </worksheet>
    <worksheet name='Base_Source'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Base Evaluation Results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Correct]' derivation='Avg' name='[avg:Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;apdvs&quot;</bucket>
              <bucket>&quot;prep&quot;</bucket>
              <bucket>&quot;case_studies&quot;</bucket>
              <bucket>&quot;racs&quot;</bucket>
              <bucket>&quot;abvm&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] / [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Source:nk])</cols>
      </table>
      <simple-id uuid='{9B02EF11-98D6-4BDE-A40F-F90349D32E8E}' />
    </worksheet>
    <worksheet name='Base_Source (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>Base Model Performace Comparsion by Source on Single Correct Answer N=265</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column caption='1 Correct Choice' datatype='integer' name='[CC1]' role='measure' type='quantitative' />
            <column caption='APDVS' datatype='boolean' name='[Calculation_1508987358246354946]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Source] == &quot;apdvs&quot;' />
              <aliases>
                <alias key='false' value='Other' />
                <alias key='true' value='APDVS' />
              </aliases>
            </column>
            <column caption='Accuracy' datatype='integer' name='[Calculation_1508987358556037124]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*[Correct]' />
            </column>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1508987358556037124]' derivation='Avg' name='[avg:Calculation_1508987358556037124:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CC1]' derivation='None' name='[none:CC1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1508987358246354946]' derivation='None' name='[none:Calculation_1508987358246354946:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:CC1:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:CC1:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]' scope='rows' value='% Accuracy' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] / [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk])</cols>
      </table>
      <simple-id uuid='{8EDE4C39-C4B8-4FA3-ACD2-78DA4312A8D8}' />
    </worksheet>
    <worksheet name='Base_Topic'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Base Evaluation Results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column datatype='string' name='[Topic]' role='dimension' type='nominal' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Correct]' derivation='Avg' name='[avg:Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Topic]' derivation='None' name='[none:Topic:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;lower extremity arterial disease&quot;</bucket>
              <bucket>&quot;venuous disease&quot;</bucket>
              <bucket>&quot;aortic disorders&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>&quot;carotid disorders&quot;</bucket>
              <bucket>&quot;endovascular surgery&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Model:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Topic:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Correct:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>Num Q:  &lt;CNT(Correct)&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] / [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk])</cols>
      </table>
      <simple-id uuid='{419FE35B-4828-4CE5-97CA-E780F6613254}' />
    </worksheet>
    <worksheet name='Base_Topic (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Base Evaluation Results C=1 N=265</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column caption='One Correct Choice' datatype='boolean' name='[Calculation_1508987358276337667]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Num Correct] == 1' />
              <aliases>
                <alias key='false' value='&gt; 1' />
                <alias key='true' value='1 Choice' />
              </aliases>
            </column>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column caption='Num Correct1' datatype='integer' name='[Num Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Topic]' role='dimension' type='nominal' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Correct]' derivation='Avg' name='[avg:Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1508987358276337667]' derivation='None' name='[none:Calculation_1508987358276337667:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Topic]' derivation='None' name='[none:Topic:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358276337667:nk]'>
            <groupfilter function='member' level='[none:Calculation_1508987358276337667:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;lower extremity arterial disease&quot;</bucket>
              <bucket>&quot;venuous disease&quot;</bucket>
              <bucket>&quot;aortic disorders&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>&quot;carotid disorders&quot;</bucket>
              <bucket>&quot;endovascular surgery&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358276337667:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Model:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Topic:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Correct:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>Num Q:  &lt;CNT(Correct)&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] / [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk])</cols>
      </table>
      <simple-id uuid='{9EC0E112-16D2-4E65-ADAA-93AB696F7DDB}' />
    </worksheet>
    <worksheet name='Base_Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Base Evaluation Results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column datatype='integer' name='[Case Study]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column caption='Num Correct1' datatype='integer' name='[Num Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Correct]' derivation='Avg' name='[avg:Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Case Study]' derivation='None' name='[none:Case Study:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Num Correct]' derivation='None' name='[none:Num Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Num Correct:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Num Correct:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]</rows>
        <cols>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Case Study:qk]</cols>
      </table>
      <simple-id uuid='{7B22B4CF-9DDA-4FBE-BDA3-540DB1D5A19E}' />
    </worksheet>
    <worksheet name='RAFT'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RAG Results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column datatype='integer' name='[Test Question]' role='measure' type='quantitative' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Model]' derivation='Attribute' name='[attr:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Correct]' derivation='Avg' name='[avg:Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Test Question]' derivation='None' name='[none:Test Question:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Test Question:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;base&quot;</bucket>
              <bucket>&quot;RAG_100&quot;</bucket>
              <bucket>&quot;RAFT_100&quot;</bucket>
              <bucket>&quot;RAFT_100_gpt&quot;</bucket>
              <bucket>&quot;RAG_500&quot;</bucket>
              <bucket>&quot;RAFT_500&quot;</bucket>
              <bucket>&quot;RAFT_500_gpt&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Test Question:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[attr:Model:nk]' />
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] / [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk])</cols>
      </table>
      <simple-id uuid='{E9362454-23BE-429D-A09F-5922A397B926}' />
    </worksheet>
    <worksheet name='RAFT_APDVS'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RAFT APDVS N=10 Q</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column caption='APDVS' datatype='boolean' name='[Calculation_1508987358246354946]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Source] == &quot;apdvs&quot;' />
              <aliases>
                <alias key='false' value='Other' />
                <alias key='true' value='APDVS' />
              </aliases>
            </column>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Test Question]' role='measure' type='quantitative' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Correct]' derivation='Avg' name='[avg:Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1508987358246354946]' derivation='None' name='[none:Calculation_1508987358246354946:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Test Question]' derivation='None' name='[none:Test Question:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]'>
            <groupfilter function='member' level='[none:Calculation_1508987358246354946:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Test Question:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;base&quot;</bucket>
              <bucket>&quot;RAG_100&quot;</bucket>
              <bucket>&quot;RAFT_100_gpt&quot;</bucket>
              <bucket>&quot;RAG_500&quot;</bucket>
              <bucket>&quot;RAFT_500&quot;</bucket>
              <bucket>&quot;RAFT_500_gpt&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]</column>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Test Question:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' />
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] / [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk])</cols>
      </table>
      <simple-id uuid='{89FAE257-B408-4C85-812D-E421CDD5573C}' />
    </worksheet>
    <worksheet name='RAFT_NO_APDVS'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RAFT NO APDVS N=76 Q</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column caption='APDVS' datatype='boolean' name='[Calculation_1508987358246354946]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Source] == &quot;apdvs&quot;' />
              <aliases>
                <alias key='false' value='Other' />
                <alias key='true' value='APDVS' />
              </aliases>
            </column>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Test Question]' role='measure' type='quantitative' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Model]' derivation='Attribute' name='[attr:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Correct]' derivation='Avg' name='[avg:Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1508987358246354946]' derivation='None' name='[none:Calculation_1508987358246354946:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Test Question]' derivation='None' name='[none:Test Question:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]'>
            <groupfilter function='member' level='[none:Calculation_1508987358246354946:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FreedomIntelligence/Apollo-0.5B&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Test Question:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAFT_100_gpt&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAFT_500&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAFT_500_gpt&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAG_100&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAG_500&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;base&quot;</bucket>
              <bucket>&quot;RAG_100&quot;</bucket>
              <bucket>&quot;RAFT_100_gpt&quot;</bucket>
              <bucket>&quot;RAG_500&quot;</bucket>
              <bucket>&quot;RAFT_500&quot;</bucket>
              <bucket>&quot;RAFT_500_gpt&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]</column>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</column>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Test Question:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' value='129' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[attr:Model:nk]' />
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] * [federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk])</rows>
        <cols>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</cols>
      </table>
      <simple-id uuid='{5B9A20E2-29DF-4CF1-AAA6-DCC27C7A1AB0}' />
    </worksheet>
    <worksheet name='RAG'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RAG Results N=451 Q</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Model]' derivation='Attribute' name='[attr:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Correct]' derivation='Avg' name='[avg:Correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAG_100&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAG_500&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[attr:Model:nk]' />
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Correct:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] / [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk])</cols>
      </table>
      <simple-id uuid='{60EFE1A9-7518-4FDF-AAAC-01059719EF7B}' />
    </worksheet>
    <worksheet name='RAG_APDVS'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RAG Results APDVS N=61</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column caption='APDVS' datatype='boolean' name='[Calculation_1508987358246354946]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Source] == &quot;apdvs&quot;' />
              <aliases>
                <alias key='false' value='Other' />
                <alias key='true' value='APDVS' />
              </aliases>
            </column>
            <column caption='Accuracy' datatype='integer' name='[Calculation_1508987358556037124]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*[Correct]' />
            </column>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Model]' derivation='Attribute' name='[attr:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1508987358556037124]' derivation='Avg' name='[avg:Calculation_1508987358556037124:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1508987358246354946]' derivation='None' name='[none:Calculation_1508987358246354946:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]'>
            <groupfilter function='member' level='[none:Calculation_1508987358246354946:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAG_100&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAG_500&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[attr:Model:nk]' />
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] / [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk])</cols>
      </table>
      <simple-id uuid='{3BFB73ED-0000-464B-A107-CC155405E7A8}' />
    </worksheet>
    <worksheet name='RAG_NO_APDVS'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RAG Results Non-APDVS N=390 </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='results' name='federated.0e8n4vv1mplld015qn8wr061pd9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0e8n4vv1mplld015qn8wr061pd9e'>
            <column caption='APDVS' datatype='boolean' name='[Calculation_1508987358246354946]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Source] == &quot;apdvs&quot;' />
              <aliases>
                <alias key='false' value='Other' />
                <alias key='true' value='APDVS' />
              </aliases>
            </column>
            <column caption='Accuracy' datatype='integer' name='[Calculation_1508987358556037124]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*[Correct]' />
            </column>
            <column datatype='integer' name='[Correct]' role='measure' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ChatGPT-4o&quot;' value='GPT-4o' />
                <alias key='&quot;FreedomIntelligence/Apollo-0.5B&quot;' value='Apollo-0.5B' />
                <alias key='&quot;gemini-2.0-flash-001&quot;' value='gemini-2.0' />
                <alias key='&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;' value='JSL-2.7B' />
                <alias key='&quot;microsoft/Phi-4-mini-instruct&quot;' value='Phi-4B' />
                <alias key='&quot;skumar9/Llama-medx_v3.2&quot;' value='Llama Med 7B' />
              </aliases>
            </column>
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='string' name='[Train]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;RAFT_100&quot;' value='RAFT100' />
                <alias key='&quot;RAFT_100_gpt&quot;' value='RAFT100G' />
                <alias key='&quot;RAFT_500&quot;' value='RAFT500' />
                <alias key='&quot;RAFT_500_gpt&quot;' value='RAFT500G' />
                <alias key='&quot;RAG_100&quot;' value='RAG100' />
                <alias key='&quot;RAG_500&quot;' value='RAG500' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1508987358556037124]' derivation='Avg' name='[avg:Calculation_1508987358556037124:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1508987358246354946]' derivation='None' name='[none:Calculation_1508987358246354946:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train]' derivation='None' name='[none:Train:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]'>
            <groupfilter function='member' level='[none:Calculation_1508987358246354946:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ChatGPT-4o&quot;</bucket>
              <bucket>&quot;gemini-2.0-flash-001&quot;</bucket>
              <bucket>&quot;microsoft/Phi-4-mini-instruct&quot;</bucket>
              <bucket>&quot;skumar9/Llama-medx_v3.2&quot;</bucket>
              <bucket>&quot;johnsnowlabs/JSL-MedPhi2-2.7B&quot;</bucket>
              <bucket>&quot;FreedomIntelligence/Apollo-0.5B&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;base&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAG_100&quot;' />
              <groupfilter function='member' level='[none:Train:nk]' member='&quot;RAG_500&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</column>
            <column>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]' scope='rows' value='% Accuracy' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]' />
              <color column='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]</rows>
        <cols>([federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk] / [federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk])</cols>
      </table>
      <simple-id uuid='{86562A11-F4B2-4CEA-B7E5-B74D40A5101D}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A56879CE-DE09-4E1C-956A-04C81BABFC94}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='1550' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98140' id='3' name='Base_Num_Correct (2)' w='49484' x='516' y='930'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98140' id='5' name='Base_Source (2)' w='49484' x='50000' y='930'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='7' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='6' param='vert' type-v2='layout-flow' w='98968' x='516' y='930'>
                <zone fixed-size='280' h='98140' id='3' is-fixed='true' name='Base_Num_Correct (2)' w='49484' x='516' y='930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98140' id='5' is-fixed='true' name='Base_Source (2)' w='49484' x='50000' y='930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{64CF7248-147F-4E4E-9AAB-4ABA930879B4}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='860' maxwidth='1350' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98140' id='5' name='RAG_NO_APDVS' w='98814' x='593' y='930'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='7' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='6' param='vert' type-v2='layout-flow' w='98814' x='593' y='930'>
                <zone fixed-size='280' h='98140' id='5' is-fixed='true' name='RAG_NO_APDVS' w='98814' x='593' y='930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{347A77EC-96CC-4502-BD2A-C3A390F103CD}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' show-side-pane='false' source-height='44'>
    <window class='worksheet' name='Base'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DABC5B40-0B2A-4175-813E-33857594F219}' />
    </window>
    <window class='worksheet' name='Base_Source'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2A6D476-6BE9-4BD0-9C8D-A22A3AF50E75}' />
    </window>
    <window class='worksheet' name='Base_Source (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:CC1:qk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95F4EE04-3AAA-4D76-A628-8496FE2CC00B}' />
    </window>
    <window class='worksheet' name='Base_Num_Correct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Source:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD19A27F-AA5A-4C00-A52C-290EA7290689}' />
    </window>
    <window class='worksheet' name='Base_Num_Correct (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0e8n4vv1mplld015qn8wr061pd9e].[avg:Calculation_1508987358556037124:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358276337667:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Source:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45BAA357-A18D-4259-859E-10C662A0CDBA}' />
    </window>
    <window class='worksheet' name='Base_Topic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Source:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{566FA16C-990D-4CF8-A99E-B8C2E1B26D1C}' />
    </window>
    <window class='worksheet' name='Base_Topic (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358276337667:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Source:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C3EE011-6356-42FC-8BA4-0655CD0B9E57}' />
    </window>
    <window class='worksheet' name='Base_Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Case Study:qk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Num Correct:qk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Source:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Topic:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D092E7B-131D-4D2A-B02C-112A0DF2C091}' />
    </window>
    <window class='worksheet' name='RAG'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A36CE93-C185-4EC4-BD6A-128BF00DADD8}' />
    </window>
    <window class='worksheet' name='RAG_APDVS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1E430AF-DCA1-48CA-AA15-D896FBD534BF}' />
    </window>
    <window class='worksheet' maximized='true' name='RAG_NO_APDVS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8FF4988-90BA-4F91-BCAD-F6956705F407}' />
    </window>
    <window class='worksheet' name='RAFT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Test Question:qk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F672D43B-1983-4C38-BF8A-4CC9D670AB98}' />
    </window>
    <window class='worksheet' name='RAFT_APDVS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Test Question:qk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9C10D5C-1E92-41F5-AD8A-1988E9ACA1BF}' />
    </window>
    <window class='worksheet' name='RAFT_NO_APDVS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358238863360:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Calculation_1508987358246354946:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Model:nk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Test Question:qk]</field>
            <field>[federated.0e8n4vv1mplld015qn8wr061pd9e].[none:Train:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9666031-BAE5-4058-B792-ABD81AEE0779}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{19164843-A2F4-4FAF-9EB3-675FAD126163}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Base_Num_Correct (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Base_Source (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CA18185B-E5C7-4EE6-B4EC-1347B73C72C2}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='RAG_NO_APDVS'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{79732738-AB19-414B-B009-2259A00106A8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Base' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Base_Num_Correct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Base_Num_Correct (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2deXAc153fP909M5gLg/u+CeIgQIoUKVmkJIuSSOqyEnnXyZZjlZ3KVja1
      Fe9Ru1X5L3/4r/1jq+Jjj9pN4tpUubJ2Eq9TG8mmD8kUxUM0SZk37mNwDDDADObC3DN95A+Q
      Q4IkiPvivE8VCt09773+vV/3t18f7/eeZBiGgUCQp8jbbYBAsJ1sqgBisdhmFv9UYRgGDzbG
      D68D+Hy+rTbrsTz2puEx9u4GNlUAmqZtZvG7hmxogv/8F39FRjM49/P/zc/P3XgkjefWWT76
      fCS3Ptt3kdOfDeTW9WycK9fu5NZv/eYM3/nOdzl99gpPOu38EwP89fe+R8/ozKrtPv3zn+eW
      p4Zv8b3vfpczl27xox/96NHE6XkuXutd9T62G9N2G5APGJk4ibCPkZkAM5F5SIT453/87wx6
      Apx472vc+vWPmfH5OfzW1/jbb/8lccnJ7518ZlEZE/23ae48cHctzcXfjvDHf/LH/M//8X0G
      CpP85Mx1kMz8zuvP8NOPP6PjyKu8d+IFPvz5x/z+H34Tkxrlb779l8RUC7/3u6/x43/6NS8d
      O8jHFz7n2BdfYfzGRUKqjfd/9yT/+L/+ma5nDvKzf/4nYrqV3/vSa5z++Bx/8B//mAIFvvfJ
      P/Ff/uJbvPTlf0fPmZ/gj2V5/998BffULOmpm9x0Bzh5/EV+/stfU9d+iPd/5w2krXf7ihDP
      AFtE9+FnufrRTymu3QNozCUU/vSb/5aeS2cwijp4/3feIOEbJWGtYm+ti3BCXZR/yBOgraE8
      ty7JCoosY1JkNFXj+Dv/iuZKC9eu3ebwsS+iJsIAaAYoJpl53xi1+1/nnRea6Bubo/XgS7x8
      sJWatkO83F3JvFpEe00pV69e5a2v/gHvvv0mR144xr9+51UADEPCpMjIskx1cyf/4f33mHH3
      I1V38ftffplrPcOk0mncswn+7E/+CJ+7j33PfgGzmnxiC7XdCAFsAZLZSlXdXuRsjP3d+ygp
      Lqalys5f/d0PeeHkO5hjI3x49jo1e/ZTaoTwhhI4HIUUOa0AGGqcNHYKlHvX0QKO7Kvi29/+
      DrbqDkqLi3HaLJSWlvOFF77AzSuXMducALxz4mX+/nvfZSrlIjxykY9v+Xm2o47a6gpQLDTW
      VmErqqfSmcIzF+PI0Rf55Cf/wJlLt2gqtfJ/Tn8KwMkvPsdff+87fHzxBqWlpcgWO6V1rTii
      Y/zg9G958ch+ykuKeWZvFd/9q7+hrvMQQ7evoSnW7XD5ipE28zVoJBKhqKhos4pfFsMwyGaz
      WCyWbbMhk8mse/9TPVeIl3fTXuXYIKu2lo3wwWbZoHzrW9/61mbtNJ1OY7U+6QpgEAsHGR2f
      orCoGP/0OB6vn0KnneGhIWZ9PjTJTKHDBkAmMU8wmsZhK1ixDYlEgoKClae/RyQSWWR7Nhkl
      rZswm2QMXWN8dIQMJhy2hTSRoI/ZYJQil3PR/W4sFlvGB6BmkgwODJHI6piNLAlVxmoxkU3H
      SWUlymobKXNa0LJJfIF5zKgMDo+QzOq4Cp3L3l+n43F0xYQiw+yMD6fTuWI/hOe8ZCUrBWYZ
      z8QkzqKiR/Y3MzOL0+nE751kfHKKcDSJhSwj7jFUTEiG9kQfzM9HsJjNjI+OkNJlTOjokglF
      XtiTrqmMuYfRJAs2WwGGmmagfxCfz4fJ5mR6fBh/cJ6i4uJcnod5+Dj4Z71YrI7tvQVKz88x
      5AnS1tpEJp0mEk3T3tpIb/8wnW3NZDUzNRUlABiGztDoMJPjkyRjIXp6eghE4qveZzIaoren
      F8/MHIHZKXr7BsjqGfrv9NLT28vgQB+zgQjZbIZkJEDfwCAjYx4MLYNqLDg3FglRXtvExMgg
      OmCoCYbG/RSk5/AEk6v3QzSMvawG5qfx+EIMDgww5J5EVzU0Q8+lGx7qZ2JimlBgjurGVhLe
      CaLqEwq+S3jGSyyrAQahUIhoaI7enh5C0SSTY8P09dxhcGiIkXEPyViY3t4efMF5ALx+H5Nu
      N1o6zpXLN8gaGsMDfUxM+1AzCfp7exkZ8wBQUdNAZ8deYvMRgn4/ze378I4Poy1zj+EeHWVi
      uA9bWR1Wk0TYP0s8nc39HpsPU1nXzPhwP7oBsqmAzq4uHGYDVdPISmaaKx30DntW6HEDz2g/
      Y9OB7RVAyBekpqmOybERZufCRMN++geHKSwqyaXR0gn6B4fwTropqW5CkWDEPUnnvn14xkae
      UPrjGR3z0NHZwXwowNCImxKHxNDoBKphw2wYNOxtJ+CbZm7OTzIcwFXdSDo5TyY6RyiWZHBg
      AIuzBN/kEM7SKmRAS0axFpVSVVNJ0BdagycMxkeG8Ec1nAUK1XWNaKl50vF5wvPzDPT245+d
      oqCoZuE5QFcZGujDF89gW8MRlCQJDJXh0XHmYymaGytBLiSViCIhIUsSI8Mjd9OaUSSNWa+X
      yrpagh43CcmGZ9zN2OgYjXs7KHHZc2VPjw5Rt6cdLZuiv/cOCU1miYvyImoamvC6+/H6w/e9
      kk3R2zeItbCYmbFBCstrcmUZepZg3KDMWcDs1AQ3e0coLyteUf2TwQmMohbCPs/2CqC0uhzP
      6DiVNZXEozEKiyvo7t5PW0t9Lo1SYKezvQ1V1Qj7pvB4vRi6TiweR1+L+YZGIhEjmc5i6Bop
      VaGs1IlJUZBlBUVRkHIHTMJkUhZOGEAxFdDe0UFgchDdXkFrYw3JaIi0yUkqPIdncoaK6rI1
      eEKiqbWNI88/h90sYzKbkO8eaVkpoKOrEzWTJh72M+mZIK2baG7dS32xiWBSX6bsBbLZLKq2
      kNY9PkFdXQ0yoCgKsizn6ul2u6murUW57wTKi2yM+OKU2M1YCizEo1GKS0qRJZ1EIkE8kVpw
      rZ7FF9OodBWgmApobevArmhkl2wCDFLJJJmsTiqdYW/HPmLhOWDh2U2XzXTta8c/PgiFVbTU
      V5OMhklkVKbdw9S0tC7YV11Hd9de/DP+FflifCZKbakVs6Rt/0NwfD7EzFyExqZGsukUdvvd
      q4mhEUtkcN69/19AJxZL4rBZmJiYoqahEYtpaREYhkE0GsXlct3fXzTMjG+OeFqnvamaaV+I
      xqY6MikVCZ0Cu51UIgGAWZYwzFbUdJICE6iyjQKTRCwSxOsLoJit1FYWY5gdaIkw8ymD2qrF
      AliJD7RsBtWQKbCYUDNpdMmEmk1jMSlokkKB+d7nGoNYLIFFMZjweLG7Sh/Z3+PIJGNMeLy4
      yipwWi0oaPhCccpKigADa4GZTBZ0PYtFganZEOVlJTgcdhKJBHarhXAshUUGq9NJwOtBMzmo
      KnMxOenBVVJGscuJrmZIZg0ctgIS8yGmZucoLqvEorCEDwymJycoLKvGbpGYnPBQXFmDXdGY
      8HgpKqukorSIaDjAjD+IqcBGdVkRksWOmk7icDgBnckxN6pkprGhHpPy+PPhweMQj8exOxyo
      6eR9Afz09hDhZHpZZ66GdpeVjpqKDS1ztSQSifuiAnRdR5akhXvJlbTNG7z/fGQn+GApG3Jf
      ggMqzGUf+f2xGIaOoYOsyOiaimGAYjKhqyoGEopJAWCPYt7216CSJC1qAbaD7fTBTmEn+OBx
      NqypK0TQfZtE3EpDdzMT164hywYVnQeY6e1BlnRqDh7FYhbf2AQ7nzWdpWV7OjGbTWhRH5bq
      NmpaG5kbuI2jsZuqxioiQdELVLA7WNdlWrY60BMxMvE4trJK1HiMTCKJZRUfqgSC7WQNAtDw
      Dw6RSYZIpC04rBmiKRNlTXuxShGShhOXSwhAsDtYwzOAQkX7/tyaw9WeWy5t6dwImwSCLUM8
      qQryGiEAQV4jBCDIa4QABHmNEIAgrxECEOQ1QgCCvEYIQJDXrE8Ahk7QPYBvbBwDCE0M4R+f
      2NHDYAgED7IuAWTDk2TM5RQY8wuhchkbZi1MNJrZKPsEgk1lXSPDmQoryE70oZNG02NY6w5g
      I8N8IsXM9BAJSzuqWrdRtq4JTdNQ1RVEjm8Suq5v6/53AjvBB0vZsC4BSCYLzpIyEqE5Kvd1
      4u3pJyVrVO5vpqCqG3txISbT9o2+aBgGiqJsqw0L8bb5PQLlTvDBUjas0yoFR3k5hdV1mCxm
      6vd3Y6BgFsEwgl3COgUgYbHfH2TJVGB7QlqBYOchLtWCvEYIQJDXCAEI8hohAEFeIwQgyGuE
      AAR5jRCAIK8RAhDkNUIAgrxGCECQ1wgBCPKadQtA11S0u91MdU0Vs8MLdhXr6wyXjTF+sw+L
      SaOwqYPA8IAYHl2wq1ifABQzhpoiq0sYsRkcjd24JB+RYAwtPCkCYtgZwSDbzU7wwaYExKhR
      PwWVeyh1pIiEk+jZGBk5haW0gCIREAPsjGCQ7WYn+GApG9Z1n2Jy1WDRwoTDGcpbu+4Oj24X
      w6MLdg3rk6WkUNHWnVsVw6MLdhviSVWQ1wgBCPIaIQBBXiMEIMhrhAAEeY0QgCCvEQIQ5DVC
      AIK8ZksEEIvF+Pjjj5mcnMTtdvOrX/2KWCwGQDqd5pNPPuHmzZtomsalS5dIJpNbYZZAsDUC
      OHv2LJ2dnZSVlXHjxg2OHTvGJ598AsDt27dpaGhgZGSEcDhMOBzOiUMg2Gy2pIeS1+ulqqqK
      y5cvU1payuXLl4lEIgBUVFRw4cIFDMOguLiY6urqrTBJIAC2qAVobW1FVVXMZjONjY0UFBTQ
      3d3NrVu38Hq91NfXAzA3N8fQ0BD9/f0isEawJayrBdAzcXxuN/FZD2X7jxIZ7cOQFOoPPY9J
      kXLpXn31VQKBAM8//zyZTIbi4mJKS0tJJpPYbDaCwSDPPfcciqLwyiuvIEkSkiQ9Yc8Cwcaw
      LgHIFgdV7V1MpTPY9TnS9QsBMeFgDDU4sSggpqSkBACLxYLFYkHTtNz/oqKiXJnl5eXAQgCD
      ruvrMQ8QATE7gZ3gg00JiAFI+saxVjQimxPoiQyanEVxmCjvuB8QMzQ2zd9/cG3FZVa4CvhP
      X38dRVHWZZsIiNkZ7AQfbNIMMZDOQGl9GTKlyN7bzEsF1NQtnigjreoMz6z8zU46u/H3/5OT
      k4yMjPDSSy9x+fJlUqkUr7zyChaLhUQiweXLl+nq6sLhcHDlyhWeeeaZXGskeHpZtwBKGlru
      LklUdR5cb3GbQiqV4vr165w6dQpVVYnH45w6dQpJkjAMgzNnznD8+HFMJhMfffQRJ06cQJbF
      N8J8IC+OciQSwePx8MEHH+B2u7HZbPzwhz/E7/cDC63DZ599xkcffcTExATnz5/n008/3War
      BVtBXgigpKSEsrIyGhoaiEajFBUVUVpaSiKRwO1209jYSFNTE4Zh0NDQQHNzs3gNmyfkxdOZ
      xWLh7bffJhQK0djYyPT0NJWVlVRWVhKLxXjrrbcYHR3l7bffRpZl3G43b7755nabLdgC8kIA
      AC6XC5fLBUBd3f2xiu69gm1ra8tte3BZ8HSTNwL4ya+vcWt0bsXpX3+2iePPdWyiRYKdQN4I
      wDMX54Y7uOL0z7RWbqI1gp1CXjwECwRLIQQgyGvy5hZou8lkMpw5c4aKigr27NnD+fPnaW1t
      pbu7G8Mw+PTTT0mn05w8eZKzZ89iGAYnTpwQnQI3GdECbBGfffYZTqeTuro6Ll68yJtvvsnA
      wAAAPp8Pk8lEVVUV58+fp6ioCLvdzuzs7DZb/fQjBLBFBAIBGhoa+Pjjj9F1HUVRclf3dDqN
      zWbD6XQSCASw2WzY7XYSicQ2W/30I26BtogjR45w9epVTCYTra2tfPDBB9hsNm7cuEFLSwsX
      LlxA0zTeffddTp8+ja7rfPWrX92w/RuGwQ9+8ANqa2s5fPgwn3zyCdlslvfeew+73Y5hGHz/
      +9/nxIkT9Pf3E4/HOXLkCHv27NkwG3Yi6xaAb/AWumGivLWd2Z7raJKZuv2HUETbsojm5maa
      m5tz693d3Yt+/9rXvpZbfv/99zd8/5lMBl3Xc63OvViLe10+7ty5Q1VVFel0mng8zrvvvstP
      f/rT/BZAqL8PZ2MTZrv9sb/rST/huQSuilK00DhKRRslko9wMI7FiJF1mdB1HcMwVm3Ygwdr
      rRiG8UBgzepsMAw2JCDnng2GYaw6KERRlA3rlaooCl//+tfp6+vj8uXLVFdXo+s6wWAQm83G
      2bNncwFKL7zwAhcuXMBms22oD7aTpWx4rAB0VSXY28P85CSaplP+0NXqfkINa2k1JeUyc+5p
      lOqyhe0SSNL9A7eW03gj3n7spDcoqVSKP//bj1YV6/Cdb56kyFW4IftPp9OcO3eOdDrNyy+/
      zMWLF9E0ja6uLu7cucM3v/lNJicnMZlMeL3eXLzE085jBSDJMrqm4aipWfrkB2RHFRbjBnMe
      g9LOQwSH7xCQLNTtdyBLDsxW28IVbA0noiRJ6776GYaBLMt3y1mdDZLEhlx979VDkiTC8Qyp
      7MqvhBvhg3s4HA7efvvt3Pp7772XW66sXPjq3dTUBCzuK7URbGQ9NtqGx7cAmkbFwUMYyzZb
      EtX7ns2t1T3z3LqMFGwunpk54qnsitOXF9kpKylaPuEu5rECUMxmtGwGA1m8J32K+NHHd7jQ
      O7Pi9P/+7f38iy/moQAA1HiQsRs3QTZR0txBRUPdjrqnFgg2gqUv8JKMoalk02nSviEGf3t7
      C80SCLaGJVsAQ9eo6PoCRS4TqayJGod1K+0SCLaEJVuA1NwEIX+YbHiKiQE3JrN5K+0SCLaE
      JQVQtOcQhEcZHZim9VDXVtokEGwZSwogHZohMDlJbGacmbGprbRJINgylnwGSEd8FDa0Y5Xi
      xO8OZS4QPG0sKQBb5R4aysxkw7MU1j3dHaIE+cuSt0B6Osboby5hKSrF0MUgUYKNIRAIMDQ0
      RCwW49e//jWhUCj3m6ZpXL16lWw2y4ULF/j888/X1JFyNSwpAMlkpbDEjm+wl1h4flONEOQP
      58+fp6enhzNnznD06FF++ctf5n67fv06ly9fxjAMDh48iNfrJRqNbqo9S7cAmkommSQ2NURg
      JrRUMoFgxVy/fp39+/ejKAqVlZWcP38+1wJEo1HC4TC1tbVYLBYGBwcZHx/Hat3c709LCkBW
      zFidTuzFJeja0h2oAu4+ZgZ6yao689NjBKe9q+x5L8gXDMNgaGiI27dv09jYSHt7Oy0tLQwP
      DxONRslms9y8eZPe3l6KiorYu3dvbgDjzWLJh2DZZMJRWU9BXT2Ks2KJVBrppErNvv0YyTki
      UXDIs8Tj5Tgd4sOZYDGHDx/GMAxeeuklzGYz4+PjnDx5MjdgcW1tLS+++CJOp5ORkRH279+/
      4V2zH2ZJAaQCk8yMJagsThPxJWk/+PhhAs1mhelbV7E5bViKmrBJWeKJNDHPYG6KpOW7VT+K
      pmkb8gB0b4qk1Za1lgiux3Fvap61RERt9NRCxmqj4jZo/w/6IJPJIMsymqZRX19PKpXCbDbn
      BgBQFIVkMkltbS1ALv1G2fAwSwrAUbePingPGc1Oc8fjX4PqmRRZVUPXDazVe4j138YnKdQd
      3Iup4v4USdIaKqAoyoZOkbTanqySJG3ItD73puZZy0Hc6KmFpNUGBW3Q/u/VIx6P84ff+QWa
      vjIhypLEf/3zt3A6nRtmw8MsWbt593USVFFXmWL4eh9dLzzzaKEWB7X7DuTWG48cXbehgqeb
      RFpbsQC2ovf9kpclZ1070ZEr9F+5TV1by1LJBIJdzdJvgQoKaTnyBWyuQlKxzX0XKxBsF48V
      gB73cemHPyA042U+qlLVWLvVdgkEW8JjBSDZSml7/jDJcHChV+jMyieWEAh2E0sMi2KisvMQ
      lZ2H0NUsmiY+bQmeTp74bi7u9+C5cxNdjA0heEp57JltpKN4R9z4RkdwFDvxud1bbZdAsCU8
      /tJucVLokACZ+XCa2rbWrbVKINgilmgBwkwPT6LrGla7mcjcyieXEwh2E49/CLY4sdlkNMVJ
      5d59KLIYEEvwdLLEWyAzDUde2mpbBIItR8wQI8grLl68SCgUor6+nvHx8fW/3zR0lanehWET
      A6O9zIyOioAYwY6lra0NwzAwmUykUqn1CyA8MUw8GkWLTpGWSrDLCebn0xthq0CwoRiGQWlp
      KQcOHGBsbGyhq/x6CtRSEaIxDYtZIhOLYrLXYZESRFNpZrzDIiAGERAD9+txbz6yteTdKBvO
      nj1LJpOhra0Nt9u93mcAE45CK76RcYzWNuKDPSQlg5pDLVgqRUAMiIAYuF+PtRzPjfKBLMuY
      zWZOnTqV29bR0bE+AShWB2VNrZQ2tCDJMk2HSwAJWUwRKdihBEIR/OF4bn1DLi/3rvDyOq/Y
      AsFm85ueSf7b6Tu5dXGpFuQ1QgCCvEYIYIWk02mCwWDurVIwGMy92TEMg3A4TDqdzi1nsyuf
      jVGwfYgvwSvk3oCu4XCY0tJSNE1jfn6eN998k2vXrjE/P8/09DRdXV34/X6i0Shf+cpXttts
      wTKIFmCF1NbWMjQ0RFVVFc899xyRSIT6+noACgsL8Xq9yLLM1NQUr7322rZPDC1YGeIorQDD
      MLBarXzlK19hdHSUDz/8kAMHDtDd3U0ymWRkZIS33noLSZIoKCggGo1u+rDego1B3AKtkL6+
      PoLBIMeOHaOnp4eenh6SySSxWIxjx45x5coVOjo62LdvH+fOnePZZ5/dbpMFK0AIYAVIksSR
      I0dy6/fGrXyQN95447HLgp2NEMAKmZoNcG3Qu+L0RXYzrxx5/IDCgp2DEMAKmZyN8P2f31k+
      4V066gqFAHYB4iFYkNesTwCGRnBsEJ/bjW4YzE+7CYgZYgS7iHUKwMBZ1YRVihKcmiASlZDi
      s8Tj4iuoYHewvmcA2UQ64mHWE6Sq2YRR0ohD0onEEsQ8nqcqIEY3VlkHg1wgjAiI2TkBMfpD
      58G6BKCn42iSlfL6CjK6k4R3FFVOU9LehLXq6QqIkaVV1kEiFwgjAmJ2RkCMyWRCfug8WFfJ
      ssWOxRxHt9RRXFKMq9SFhhlrgYgLEOwO1ictScJeWplbtTiL12uPQLCliNeggrxGCECQ1wgB
      CPIaIQBBXiMEIMhrhAAEec2u6A06NzfH1atXMQyDF154gQsXLlBRUcGxY8fQNI2PPvqIdDrN
      8ePH+fzzz5mdneX48eO5kEWBYCl2RQtQVFTEqVOniEQiXLlyhddffx2/34+u64TDYRwOB11d
      XYyNjXHq1CmcTifV1dXbbbZgF7ArBKBpGj/+8Y85fvw4siyjKEqua0NpaSmGYXDr1i10Xcfv
      91NUVITZbN5mqwW7gV1xC3Tjxg1kWWZwcJCuri5Onz6Ny+VieHiYsrIyYKGvR3d3N+fOneP1
      11/fZos3Hk3T+MUvfoHT6aSjo4Nz584Rj8f5xje+gaIoXLlyBb/fj8vlwuv1UlxczMGDB6mq
      qtpu03c0u0IAR48e5ejRo7n1hoaGRb8fP348t/y0xuMqisLx48e5efMmwWCQpqYm5ubmmJmZ
      oa6ujpaWFtxuN42NjQSDQTKZzHabvCtYtwCSIR/JpEZJbQ2p4CwqBRSWbmyfIF3XSSaTq8pT
      UFCw7t6kO5V9+/YxODhIf38/LpcLwzAoLy/njTfe4Ny5c7zzzjsA/OxnP+PLX/7yNlu7s1mf
      APQ0qZSOSQ0yN5EhMZ/EKsdQ7M9it27cyaeqKn/6178iFFv5Ve17f3SCuqqyDbNhu0mn03z2
      2WcEg0Gmp6eZmJigs7MTwzDo6ekhEAiQTCY5cOAAly9fJhKJ8PLLL2+32TuedQbEFGC3y3hH
      klTUKFBZj0vyEYnEmB/fuIAYVVVRdR1VX3lAh6Zpub+nISBGUZRFzzYP3tt3dnYuytfY2Jhb
      frAOIiBmgwNi0JJ4Rzw0PnsE0iGC7hkkOYqjsRHHBgbErOXkkWUlV8bTEhDTO+JhPr7yVrCp
      ppiaitIHTBIBMRsaEGMYEla7hdmBXkqa2igtT5KlGLttVzxb7zr+77l+rg7NrTj9N//lwUUC
      EDzKus5UyWSlunP//Q22uvXaIxBsKbviQ5hAsFkIAQjyGiEAQV4jBCDIa4QABHmNEIAgrxEv
      7AW7BlVVOX36NPX19ezfv58PP/yQffv20dXVBcCFCxeIRCJUV1fj9XqJx+O89tprVFZWLlmm
      aAEEuwaTycQrr7yCqqpYLBZefvnlRdPRvvTSS7S0tBAOh1FVlXfffZeLFy8+uczNNlog2Cou
      XryY6zM1NDTEpUuXsNlsT8wjBCDYNaRSKS5evEggEKCuro7PP/+ceDxOSUkJ8Xgct9tNVVUV
      brebUChEIpHg5MmTTyxTCECwa7BarXzpS1/KrdfVLe56s2/fvtzynj17VlSmEIBgV+H1Bchk
      V96tusTlwFXoWPL3dQpAxz9wA9VcSXVLFZ7r19AlE/UHD6PIq+t6KxCshL/7f59z0x1acfo/
      +93DvPpc+5K/r1MAMhWt7cyMB1EDE1hqOnFJPkKBOHLST8resuaZXh6MAVhLIIVh6Oj6wt9C
      /tUGxCze78OBFCtB07Tc/tcaELOWuufyG8ai/KsOiHko/5rt2EgfrPIw3KvDvXIePhc37BZI
      MikYKQ1d0pEtMs7ySsxWK7IsrzoYBRYCUu4FkawlmESSpNzfQv5V2iAt3u8aqoAsy4v+Vp3/
      AR+sBYmH6rDO/GvlXv3Xch484rtVV0JafAw2MiAGPcvs8DDxSBJX1QGMyCAhqYDaWjuyBIrJ
      vKZKL9gt5fKurQxpkQhWn3vxflcbTcUD+dfqA9Zo+4P7X5x/tReB9e3/ybasLu+a98vi4/Bw
      SeuMCTZT1XmIe9Gp9u7D6ypOINhqxJdgQV4jXoMKVoWu66TTacxmMyaTCV3XSaVSwMJYTADZ
      bJaCgoINu33aTIQABKtiZmaGoaEhxsfH+cY3vkE2m+X69evcunWLV199ld7eXioqKjh69CgW
      i2W7zV0WcQskWBXV1dWkUqlcH5uCggJefPFFKisrcblc+Hw+5ubmVj2S33YhBHz0TKAAAAY+
      SURBVCBYFZqmceLECVRVJZvNous6Q0ND7NmzB4fDQWtrK88//zz9/f3bbeqKELdAglXh8XgY
      Ghqira0Nj8dDYWEhqqpy6NAhJEmivLycvr4+Xnvtte02dUUIAQhWRUtLCy0tLYu2lZeX55YP
      H95dr8KFAAQrZmo2QI/bt+L0xQ4LXzjQuokWrZ8NFUByk4ZHF+wMRqaC/O0HN1ec/kBT8Y4X
      wIY9BOvpEL7pEAnvMInU+jtQCQRbwYYJIBvxYa+sp7iylFgktlHFCgSbyoYJwOyqIBWYIRqM
      4HAtHYAgEOwkNuwZQLaWUlqeIGuI4dEFu4fcmaoAptVGGzxEUcW9GM275Rh3Z/cwdKzmlTc2
      FrP8yAwxVpOC1bzyZwtDXzxDjElmVTbIEg/NTGKsrg6KvGiGGE3TsJpXN0GEftf2e5gVaVU2
      SCye5cakrNIHD+VftQ9Mj/OBjLbCmX5kWXpkhhizIq/JB/fKkaTFPpCMu2dZMplcU8TOk4jH
      4zgca78d0nV93QEZ223DevdvGAaGYWxIYMpa2Qk+gPXFBSxlQ64FWG78lLWgquq6K76eSt8L
      h9tOGzbCB7C+g79engYfLGXDll5WDMMgnUqSSmce2Z7JZB65AXtchdVshng88Uhsp5rNoq+g
      aTV0nXg8hqrpD23XyKqP3mI9bINhGKSSCdKZ7CPbMw9tWwo1myaeSD5Sh2w288i2x0VS6bpG
      PB5He6jF1peow8MY9/Jvow+ymTSJ5GN8sMR58IgPtHs+MB7arj5ybB+HYRgkE/GtFUB4ZoK+
      kQl8c8FF20N+L7+5cn3ZJxBDS/Hbazfxz/mYn5/H4/VhAJlklKuXf0Mgnl7Whr47N5j1zTEf
      SzywVcc9eIeewYll8/s9owyNT+EPhPB5PcwnFvY5N+Ph8m+X/0ikpWP89vod/H4/D55rqViY
      z85fIrGCg3fn5jV8fj/ReBz36AS6YWAYGqN91+kbnV02f8+tG8z6/czHH+yxqTPaf5Pe4all
      889MDDMyMU0gGGZ2epJYcuGC5pue4Oq1W8vmzyYjXL/Vi883x4PVTcwHOf/pZyw3DaBh6Ny+
      eQ2/3080HmPMPYluGOh6lpG+a/SP+pe1YXKkn/Gpma3tCjExG+TgoWeRgJmpcYKROHZXKc31
      tVQG5pfNH/G6qWo9QHO5deG+WJ/j0meXePb5F2htrl9BxKtKVjfT1dIMWob+/j503aC2sYU9
      e9voW4HjvIF5nrlbB8PQmRgZYDRt4lB3G3Ph+LL5A1MjNHQ+S61LZj7kZ8jrRzFb2bt3D80N
      NcvmhyyGZKOluRnDMHCYZa5d+Q0N7QfY295G33hi2fwaFvY0N4Oapq+vF8OA+qZWWtva6BuL
      LGuBLxS77wNdZ2y4j1HdxjOdewjOL98N2j81RnPnQSqdMpHALFOzAUwWG3tbW2iqr142v66m
      kC0umu/6wG6S+PzyJVr2HaKtfS99E8u3QqFYimcO7dvaFsBhkQnF02ue99VeVEp4bhZd00jF
      o3hmArTv68ZqWmk1FFQ1jabrqGsc7sNqkogms6iqit87RZoCOtuaV5zfWVRKyD979y3XWiww
      kVVTC8N86FnG3BNUN7ZSUbTSe2zTfR+s8aWHRYZ4asEHs95JVMVOx57G5TPexekqIhSYQ9PU
      Nb13lBULmXRiwQdqmrGxSeqa2yhzrfw5VsYglVHvvwXaDCKRCEVFRbl1Q1cZHhpCtrpobbo/
      rJ1vepKpmTmKK6poaah9YpkznnFCsRQtrW2511nJaIih0XFks5X2jk4sd982GoZBNBrF5XLl
      8scjQcanZqiqbaSs2LmwUc8yODBILJWlZW87JYX2Jfevq2mGh0exOEtofuBq5Z0cw+sPUV5d
      S2Pt/UmsH/GBYTA94Saa1mltbcWsLLRbsfAcw+5JLI5C2vfu5Umang/68cz4qWlooaRw4aAb
      WpqB/kESGZ29HZ247AVL5o+G55ic9lFd30TpvY+WeoaB/kHiaY09bR0UO61L5teyKYZH3FgL
      S2mqu1/XqYlRZuciVNTU01BT8UQfTI2PEsvA3tY9mO76YD7kZ9TtoaCwiPbWPShP8MG9lqOu
      aQ9FjgVb9WyKgcEhkhmDts59FNrMS9qQTccZGR3n/wOGsC5b5ILFvwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Base_Source' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29aXBcZ3qo95xzekF3o7ux7/tGbCTBRdRCiaIoidpFjsaeGdtzbzKVmpQd
      V93k/nB+pHzjslNOpVK5P1Ip39Q4vrYzM5lKbI9G49FCDcWpGlEjkRIXcMHKxr70gkYv6H05
      5+QHFoIkuhsEgcbWTxUKaJz3fP1+55z3fNv7va+gqqpKjhz7FHG7FciRYzvZMgMIBoNbVXSO
      HBtHVfB6fSsft8wAZFneqqJz7FPe/+mPuHVvllhgjv/1f//RmjL/8tN/JJS8//nDH/+YeVlZ
      +Rz2znDt7igA0QUXmi3VOEeOTcThC5C4fQO918B8ME7QPcXf/sPPMJQ28vuvHuE//+R93N4g
      x5/t52/+5V9pPXIKYnFWD3L7b/fRdeSlxfLu3c6NAXLsHiS9BZ0aYWDaT1ttIXevfsXL3/sh
      VWKYzy5/ybd/8KccOVDD1cu/pfPECzinRx4qQcEeSFJp1QNQf+SlnAHk2D1IkobWSivzsgGD
      RqL14EE+/L//T4a8CY51tPDTv/0bBifm6Dx0iFtXfofRWoKokVbODzpHMJU1Iyx9nhy4gbBV
      06B+vx+r1boVRW87irLYpxTFvfn+kGUZSZIyC+4yvvzNp7Q/cwarXlyp3665g4oiEwwGSSRl
      kok4gUCAeCJJNBImEAgQDIbu9/VUlVg0ylatcCSTSaLR6NYUvgpFTpJcNYADlUQisfJJTiYI
      BkMoqyoaCYdIJJ9sAmLzZ/BUwqEgwVAYVVXw+xZW/r+6PgDxaBRFZeW+Plj/J+P4ydMUGrQP
      1G+XGIDK7ZvXmXO7cc7NMzEwgN3joffGTfyBBb756gpu38KKAcQjPj658GuiSVjwuplxuNlR
      q32qwvTEGK55H0oyzvj4BElFJeD3MT42gc/rxjHnJRkJEIwlCfq9jI1NkFTA5/OuFDM5Psac
      c4a+4TEAfPZxBsemuX7z1s6qLzJ3em/jsk8wYBtnanyCsfEJZAV8q6Yk5XiY33z0K7xx6Ltz
      G49nnpu9dzZNC51ejyA8+L/dYQAJH6quDJNOJBqNIQgiRqMRSRQoKqmgtKSUmppKQn4voXCE
      oXtTtDXXIMeDjE65ECJuZuYWMn9Plhgd7kdnKcE+M81A310KCsz0D9gYGhik2KzSP+bDaZ8i
      EfLgjyS4c3eAQqPAuN2D2z1HOLjAQjBMQ1Mz8Uhkpas5OefnYEcbhRqRyDbX8WG0Oh0GgwFV
      UQgEQ1jzYMIxj9s9RyjgJxCKMGIbobGpEYBkIo7f6yXPlL+leu0OA9AYkWMLlFbWEPC5ARVF
      Ueg8dAjtqhqoqkIkMI8/GGZqcopZpxO9wYzFYiYajW2b+g8TS0KRNR+NJBIMLjA9M4vRZMBk
      tmLKN1FYUIBWe3+GuqCwiHyjYWXsoaqL9e+7dYOimmbqKopRFIV8jUAwrhBHRbddlUuBqqho
      86x0tNVTUFiMybhoDLA4plITYRxzPuz2WWbtTsyFpXQfOkQs5MtQ8pOxO9YBBD11VVbu9vVT
      WFqJRStgLi9Hu3S4pLwMAbAUFAPwfHkNLscMhaVVzIwNM+6E9va2bVP/YRrrqujv68cfDHO4
      o5OJGRcGgwGzQYsgGSi2CqhyMVqDBoukxVBchKAzUGgGRVeCybz0xldVXDMTyMlqwgseGg8c
      oK/vLvklFTvsxorUNjRQUlwIyBSVFCLp8igwg6wtxmwtBODUiy/gc8ygLSnHbptjYGCA4vLq
      LdVsZRYoGAxu6uptOBzGaDRuWnk7iWQyiSzL6PX6DZ0fDYfR6LV4vQFKS4o2WbsnZy/fO3iw
      fisvivz8ze9r7dVp0Hg8TjKZ3PBDsnxdiotKNlOtTWWv3rtlluu3O8YAOXJsETkDyLGvyRlA
      jn1NzgBy7GtyBpBjX5MzgBz7mg2tlwS8c0y7A3S0NgGgKjL3BvsprT9AoWmnrUHmWIu7d+8y
      NDSEJEkUFRVx6tSp7VZpW9hQC6BKepTEfW+TRCJGgTmPhUgyzVk5dhKjo6O89957nDt3btHr
      Mrk/792GWgCLxYKwyq1Opzdi0GuJcN9PRVGUPXtRZVlGluVdXb/29nb++Z//GUmSqKqqAlip
      z26vWyZW129DBjDnmMHlclFaXk0k6KOitJjpWQcLQoKqwha0koQoimg0O8sjZbNQFAVVVXd9
      /SRJQpIkBEF4oC6SJO36uqVjdf02VMt8SwHHjh5Do9VjzTcgiQI1zV2AwB7dJLXnGBwc5Fvf
      +haCIPDRRx+RTCb39EOfig3V2GA0PfI/s1m7hmSOnUprayvvv/8+Go2G4uLiffnwwzZNg/b2
      9pKLyLi9GI3GlT3NW+EIuVvIitkrisKPfvQjLBYLAE6nk0OHDj0wkM6RXXp7ezl//vxKF+jg
      wYP7shXISo1FUeT06dO0t7cjCAI3btzIPfzbTENDAz//+c/RarXk5+fvy4cfstgCWK1WfD4f
      n376KYcPH84ZwDZz+PBhDh8+DMBvf/vbPRsKJRNZGQMoikJ/fz/ffPMN586dw2az5cYAO4j9
      /ELKWhcoEokQiUTQarUYDIZsfG2ONPT29uL1LoZY6e/v54c//CE63f5zY9mYK4QiM++5H59G
      VVVmJkbxLITWjEcjiiJHjx4lkUjwwQcfcOLEiX37xtkp2O12ampqaGtro7KycrvV2TY2ZAD2
      mSlGxidWPs9N3SOuK2BsuB9FedQEFEXhiy++4Pz585SVlfHZZ5/lukDbzGuvvUZzczPV1dWc
      PXs2Nwh+HKpqG/AF+1c++4IRqputxN16orJCnsoDvkCqqiJJEr/85S85ePAger2eZDK5a1uB
      3eoLpAbsyNf+r0f+rwHiS39LT/8psqzddXV7HJ7YF2g1CwsLWE0G5v0BwokEeZKIJAqP+AL9
      3u/9HrBoDF9//TUajWbXGsBu9QWS4wGid99PK6M79gMkqWjX1e1xWO0LtKEu0OToMMlEkin7
      HNFolLK6FtTgHNUNrYji2g+1qqosLCwQDAY5dOjQxrXPkWMT2ZCZ1zW1UffQ/+qbWlPKq6rK
      v/7rv5Kfn48sy6iqytmzZzfy1TlybCpZWQdQVZV4PM7x48c5fvx4LoFejh1D1tYBXn75Zb75
      5htEUeSVV15J2/93OByYzWY+/vhj6urq9tS0aTKZxOv14nK5GBgY4Pnnn6eiomK71dq3bKkB
      TDr9XO2fvv8PaXG++dc3poFpEAR+/3TnI+ddv34ds9nM2bNn+eKLL5Blec8MyrxeL2NjY7hc
      Lt577z0++ugj3nnnne1Wa9+ypU/VmN3HTy+mT3CwlgHU1NRw5coV+vv7aW5u3lM+KkVFRVy7
      do3bt28TCAQ4fvz4dqu0r9mRr9WOjg7a29uZmJiguLh4u9XZVERR5MyZM5w5c4a+vj4aGxu3
      W6V9zY40gL/7u79Do9EQi8Wor6/n7bff3jNjgEAgwF//9V/z9NNPMzAwgMlk4sCBA9ut1r5l
      R+7g/eM//mN6enqIxWI8++yzeyobo8Vi4S/+4i/Q6XQUFhbmHv5tZkMtwPi9AXzBMDVNXZRY
      8wh4XYxM2pF0JrrbWx5JRPa4uFwudDodL774IjMzM5SWlj5ZgTsIVVUZGRmhu7sbRVHwer0U
      FhZut1r7lg28WmW8wTiHew4zNXYPAPusnZb2btSon/iSm8Cis1tmh7dl2dU/V65cAWB+fp7J
      yUmSyeSacjvlZ2FhAZfLteIike7H6/Vit9u5fPkyx44d46uvvsqeruu5HynuyV792VALIAgC
      giACi0nOGpqauGcbxO0LckC97yuzOn9tKpYTv61Gq9UyNDREPB5fOb6W3HaxfPGWdRoeHmZs
      bAxZljlx4gT19fUpz9XpdLhcLuLxOF999RVFRUVZq5u6hqfuwyiKgiqoO+p6bzar790GDEDC
      oFXovXGd8roORkZsVFeUgKpSWlGFTlo0DlEUEYXMDcxaU5xvvPHGisvE4ODgYlk7aBwgyzKi
      eD/buCRJnDp1ipKSEr7++mtkWaa1dW3XkPz8fL73ve8hiiKhUIiZmZnsTfOu4xpKS9d6L009
      P8zq+m2oBTjQ1XP/Q0kLAF3dBU+u2RKrI5VVVFTs+Bmgjo4OAoEAiqJgMplobm5OK7988Y1G
      456b5t1t7Mhp0C+++AKXy4UkSeh0Ot54443tViktTqeTGzduMDk5yXPPPcdXX33FyZMn15SN
      x+N88MEH5OXlEYvF6Ojo2FOD/N3GzulXrMLtdvPWW2/x1ltvEYvFdnx/VBAE8vLy1hUPNRQK
      UVhYyJtvvsnrr7/O+Ph4dpTMsSY7sgV4/vnnuXjxIoIg0NPTs+P7o2VlZaiqyksvvcTw8DDP
      PPNMStmCggLKysq4cOHCyqpwju1jxxiALxjl2uDsymdDZRcAI/MqI/OjAJw8WItBv/NikA4M
      DHDr1i2Kiop48cUX1zRYefYWimexHp0SdDYsHRj9lAQgGIvRNO3PJBXbyY4xAIcnyP/x/tdp
      ZQ41l+9IA4DFmSuTycTly5dpaWl5ZBYoMfgrErf+35TnS1VHcgawDewYA9jNNDU1kZeXh16v
      59VXXyUej2c+KceOYEcOgncbVqsVvV4PsDK3v5dQlxY0k8kksixvszaby4ZaAI9rlhmXl9YD
      HeRpReR4hHu2UXSmAhrrqp/YF2i3kUgkuHDhArA4zfnKK69ss0aby9WrV+no6ODnP/85Go2G
      733ve3smitwGWgCV8SkHHa11DA4u+gLNTo5RUNXIgseBvI7l9r3GvXv3OHDgAO+88w6vvvoq
      169f326VNhWHw0Fvby8vv/wyTU1NRCKRzCftEjbQAiQRJS0avRlVDgNgsVoYGO5HVkEQFl0F
      FhPlZW4uVydmy4QsJ3dEwKaHA2M1NjbyySef0NfXRyKR4PTp04/ouVbEvNWoqrrldVvX/ZBl
      ZB4M+vXcc88xNjZGcXExkUgEo9G4I+7DRnnCwFgakKNMjQ1hKqhidnaGRMhHaXklntkpYqqK
      cSlJnihmnr9fXjhaz1y/JGl2xN7gZWc/MeaFRBQ9cP7MU6skYhC0g86IaFx0dUiKAukev4cT
      1W0F8nrux1LivNW6OJ1OJicncTgcyLJMS0vLjrgPG+UJk+QJdB86hD8QoabQSjQaJa+yEp/X
      Q/nhHozS/hlXR3/9PyKPX055XNP+NoY3/pcsarQ1jI2Nce7cOTQaDZcuXSIcDq9k+9ntbMiM
      NVo9xUWLsx7Loc4Li0o2T6scO4ozZ87w8ccfI0kS1dXVmM3m7VZp09i97ViOrPHrX/8arVbL
      iy++uGfe/MvkDCBHRkwmEydPnuTzzz8nFovx1ltv7Zlp0JwB5MhITU0N+fn5vPnmm8Tj8V09
      AH6Y/TNizbFhurq6Vv6+ceMG0Wh0G7XZXPaOKefYMuLxON988w3xeJzm5uY9leMt1wLkyMhn
      n31GQ0MDx44d4+bNm4RCoZSyd+/eJZFI8LOf/Yyf/OQnhMPhLGr6+ORagBwZKS4u5saNG5hM
      JkKhUNoB8MzMDCUlJTQ0NFBZWcnExAQdHR1Z1PbxSGkASjJGMKpgNuoJhMJYzPkrx/puXSch
      yxRVtVFXUcDCvJMph5vxiWnOvn4WbYosMTl2JydOnCAajZJMJjEajWlX7Q8dOkRvby89PT3M
      z89nDBCw3axtAHKCW198zC97vbzzTAuXro/w3//pD5YOJkmoWnqOHuFm723qKnqwFJdzIN9E
      QtGg2VJfoJ2RmG7ZF0jMEPdotX/PbvEFkmUZRVBIBAK4/+p/euT46tQm1h/8AF3bgxt/SktL
      V7xhFUVhfHyclpaWJ9J7s1mdwDFFC6ASUzSUWY1EZQ0/+KPvrDomAiqqIoNw//SxezYaW7sX
      JZZiy6wnls9KbJ11+KlIS34q282yL1Amv29BEFb0FdfhC7TVdRPWcY3FZT8uQSAxNZ1WVojH
      H9H5888/p6+vD6vVitfr5dSpUzvinq0mc1wgSceRo4cZ8d/jmaOd/OxXF/k33zm/fDrFViO3
      bt2hsa2bkREbzU1NiAYL1ryHi8vcFVqJ+bPOXtNOjxH0MI+j706om/DQ74zyD+n89NNPc+DA
      ASoqKvD5fITD4R1Rr4dZ1inlGEDSm5js/5p/Ck4gWRseOFbb2Ert0t8FzYvNW3Nz05YommN3
      4XK5KCkp4Z/+6Z+QJIk333xzu1VKS2oDyCvi3Bsv4gip1FSnjnWZI8dqbDYbWq2W6upqiouL
      mZyc3NEh4FN20uOeMX55eRA5tsCFzz7Lpk45djFPPfUU33zzDdeuXcNms+3SWSBAk1+CWfbw
      9ZVpjp56K5s65XgCVFVldnaWkpKSlY362cRsNvPuu+8C0NfXx/z8POXl5VnXY72kXgeIhzCU
      tfAnf/gu4g4cxOR4EEVRuHz5Mnq9nkgkwpUrV3jvvfeyPgBVVRWHw4HT6aS5uZn8/PzMJ20j
      aeYpJfz2Yf7u7/+RX1++lj2NcmwIQRCYn5/HbrdTU1OzEsok23zzzTcMDAxQVFTEp59+itPp
      3BY9MnHXaedvv/4ydQugqklaDr/AO68+u+/CnOxGBEHg9ddf5/r164yOjnL27NltmX6UJGkl
      AYWqqjtyChTAH40y4plPbQCCoOGrz95nbvYe9a3dvHLyaDb1y/GYqKrKhQsXiMfjyLLMpUuX
      OH/+fNYfwGPHjmG325mbm+P111/f8dsn0w6C//RPfsik08/BQ10PHFvwzjHt9NLS2oJOEkFV
      mJ4YIy7m0Vi7/wJj7QRUVcVoNNLZ2YlOp2N4eDirb2D33/wn1GgMWHyoKoHo0g9A/itnMBw+
      nBVdVFXlyy+/xO12I8vySvaetUhpAIkFOz/5+UVeO9nJT/7lI/6bf/vecvHcG5mgu7OZgaFR
      Dne2MG+fIKkvoKZ4Z1v7XkYQBA4ePEhVVRWqqq6kccoWkes3UNO4PucdOpg1XQKBANFolHff
      fRdFUfj4449555131pRNaQCiVo+QCDE2OY3ZXLHqSBJJo0dvLESJjwPgnncTIcyUbYinnnsG
      Leq+CIy1k5zhFEVhenoar9fLtWvXKCoqeiQL/WMFxlrHd8rK+p0TVzugbTV5eXkEAgF+8Ytf
      kEgkOHTo0APfveysCakMQEnw9a0x/tt/98d45t1MugKrDmpQlQQhn4O8/DI8Hg9lpaW4Eyb0
      chxFBUmzPwJjrccZblnfrQ6MJcsybrebUCjEH/3RH/HZZ5894pD4WIGx1nM/RGndOq8ne85m
      oaoqdXV1TE1NIYoiNTU1D3y3tOTwBykNIM7lzz/n0JEeNHKIa7eHePb4cv9N4MjRxQFxx0pe
      vCIKAWpzua62C0mSeOutt4gveWi2tLTs2BmYrSYQCOD1ejl37hyKovDhhx+uLM49zNoGoDHx
      b7/7Fv/fT/4ebX4J/+a757ZS3xybiE6nQ1VVYrHYdquybZjNZgwGAx988AGyLHP69OmUsinb
      pMqGdv6rH7ZvhX45HoMbN24gSRLj4+N0dXWl3Vxy5coV7Hb7Shdgv7YA4XCY6upqdDodQ0ND
      OJ3OlOloM08TyAlu9w9tto6bhqqqhMNhwuEwXq93u9XZVJLJJA6Hg4mJCZ599lmGh4dTyiqK
      wtzcHOfPn+db3/oWdrt9x2fX3CpisRhTU1O4XC7+8A//MG0mztQrwYpMIBgCRSZPryUpK2h2
      YODbzz77jGg0isfjQRRFvvvd7+6ZqGWSJBEMBpFlmYsXL6ZNqi2KIg0NDbz//vsIgsCBAwey
      Og26kzCbzUQiEazWxeDNNTU1KWVTGkDcP8n//B//H4521vL1rUFqmrv47/7r72+Jwk9CLBaj
      vr6eUChEfn7+nkvhc/784k684eFh2traHjmuRv0ovikAOksFOkuXfe9VZMddAMTyrn3VHdJq
      tbz66qvAYivq8/lSyqZZBzBgytNhtZipO9ADYffma7oJnDlzhqGhIY4ePYrH4yEvL2+7Vdo0
      ZFnmr/7qrzh06BA2m42zZ89y/PjxB2SSU18T/fDfpy0n/9/dBGnnZdf0+Xx8/PHHmM1mQqEQ
      r7/+OgUFBZlPzICqqng8Hmw2G/n5+Zw8eTKlbGoD0Jg4f/5t9Ho9p1+rIxbdmbMKV69eZW5u
      jkgkgiiKHDt2DK12593sjaDRaPjzP/9zfvOb32AwGOjp6dlulTaVgYEBXnrpJSorK3E4HAwM
      DPDss88+cbmRSISLFy/y4osv4vV6uXTpEmfPnl1TNvXKhCjimh5hYsbBwEQ35165r5jf42La
      6aW1tRWdRkRNRLg7aENnyKetuTGrvkCRSIR3332Xq1evoqoq8Xh8zxiAqqpoNBrOnj274uKw
      lzhx4gQXLlxAURREUeT111/flHIlSVqZQPD5fGlDOaYeBCeizDjcaPNM1FSuXuBSsY1NcbBj
      yReoq4XAvANTSQ0N5QVZd4Q7evQoOp2OkydPYrPZ9lTcSlmW+cu//EuOHj1Kf38/iUSCp556
      KvOJuwS3243b7aa7u5uDBw9y+/Ztjhw58sTl6vV6vvOd76zsjUjlCAdpN8Vb+e4f/AGjQ324
      gqvDISWRJB06YwFKYmzxCy0lJCZn+Gr8HieePo6oZs8X6Pbt2ysrf6FQiIaGhq3PtZVFX6A/
      +7M/49KlS5jN5kd8WhbLXcd1SyZBFXacL9Dw8DBvv/02X3/9NaOjo3g8nifyFwpf+g2Rq1+v
      fM4DFMC19FlTWYH1B//lOnyBEmF+/OOfgtZIb/8Qf/kf/odVBzUoyShz9nHyzOU4nU7ytCLF
      ZRUEFgKgCkiSmDVfoO7ubq5evUpPTw86nS4rg+Bs+gJZLBbOnz/P3NwcU1NTjyyEqesJKKbR
      IEiaHecLdOzYMSYnJzl79iwXLlygrq7uyfyhXC5i/f0pj6vRKBqN5gFfoLUnikWJstISBEEl
      Gg7hC6yOBixw8GAXMQy0N1ViNBqxFBaRiARp6+xGK2W3D1RVVcW5c+cIBoMUFhZm9buzhSAI
      lJaWbssm960kFAoxNTXFpUuXGBkZ2ZbN8ykiw+l54933UBWFd994lQmXl7qK+/0ord5ITaUR
      YGXHT2V16sWGrUYURU6fPs3vfvc7ysrK9syDoqoqH3744UpM1MbGRmprazOfuEtIJBLMz89z
      4sQJYrEYRUVFWdchbXsjiCIFJRUUlFSkE9tWgsEgFy9eRBRFmpub98wqMCyONVRVXfFq/NWv
      fsWxY8e2W61No6qqim9/+9tcvnwZjWZ7XN2337n+Cbl06RJvv/02Go2GTz75ZE9lMNFoNDQ3
      N/PLX/4SRVF44YUXtlulTUer1XLmzBmmpqaw2WxZjyS96w2gvr6eX/ziF+j1ehKJxJ5oARTP
      GPLcogNimwbaOpYG9p7rJDwgaPLQNJ/ePgU3CVVVsdvtzM7OUlVVtS1R5Ha9AfT09Oy5FdLk
      6G+JXf7fUh4XTGXk7wEDGBwcZHp6mu7ubvr6+vD7/VnPJrMrDcAXjPIn//GjtDJ//l+coqsh
      t0NtJ6PX6wmHwywsLGRMvbRV7EoDUFWVcCyRVma/+sLvJpqamigqKsLpdPLiiy9uiiPc47Ir
      DSDH7sbz9/9I0nU/ZGIhEOf+iq3x6afJf+l0VnTZkAEM3e0lEk9QWttOdeniOoDHPs7tMTen
      nzue/uQc+57Y8BCJ8YmUx7VZXOvYgAHIRJIiPUePcbP3DtWlh1GSMabnwxQYNCtxIRfdBTJ3
      Q5Z9gNbTZZEVeckPJ7OsoihbtjlmuX4iGfx7UFd0yOTJuRzMCkDZ5OumyDIgrvMaKyiCgrwO
      r0ZFXf81VlffjwxOrauvxeOQ8Rov3Q9FUVDT+gJl/qrFh1tY9KQYHbhDOC7hmpmmpaMbk15C
      EIR17UJa9slYl6yw7GO0ntxj60vStxHu1y2DLxDC+usnPIYs96/bekLXC6KIIIqo67huoigi
      CAKikPnaCat03i7ZB85bh8xy/TLmCEuNRIFJx63eW9Q1dzEyYqPl4HFaULBZzOQvJcpbzwNy
      X259N31Z8fXJbl3SufXqsCy7LrlVssJjJRd8jOu2nnJX5DOKIrD+68Dqa7aesjdy7zI5J7Lq
      +dm4AUBD6/252mLL8sqdSEvrzsoH+zB9fX309fURj8eJRqN85zvfwWKxbLdaObaRfRU2YHZ2
      diVu/nPPPYfbvTP3OefIHvtqGvTpp5/m8uXLdHZ2Mjo6yhtvvJFSNhwOc+HCBbRaLbIs8+ab
      b+4JN4scD7KvWoDp6WlOnTrFrVu3CAQChNOE875x4wanTp3inXfe4ZlnnuHGjRtZ1DRHtthX
      LYDdbsdgMNDVtRgnx+PxpMxgcvjwYT755BMMBgPRaJS33347y9rmyAb7qgV44YUXGBoaore3
      l0gkQl1dXUpZv9/Pt7/9bcxmM6qq7tsoa3udfXVXx8bGcLlcvPzyy7S0tDA9PZ1S9t69e0Sj
      USKRCGfOnOH69etZ1DRHtthXBjA1NcV3v/tdrl+/jsvlSjsGqK+v5+LFi1RXV+NwOHZ8xvMc
      G2NDBjA7OUpv700WIosemeEFD3fu3uXOwPCODt7U1dWFx+PhnXfeoa+vL20Gw9LSUqLRKCUl
      JbS3t6c1lhy7lw0YgIJzfoHDhzoZWQrXbTAX0tXRTjToR965zz+VlZVUVlaSl5dHd3d32mnN
      mzdv8uabb/L5558TCASYmEjtvJVj97KBWSAFQZAQRB2oiy2AIKiM2oZR0Cw5HClbGhgruS7Z
      RwMxKYrC4OAgfr+f+vp6CgoKUgZiam5uZmxsjDfeeIP333+flpaWB3TdysBYmZzWVFbL7sLA
      WI9x3R6HjNdtqdzMgbHSokFSo9y6eY3C8hZGRkYothqJJkFJxJFV0EpbmyRvXUGbpEcDMV2+
      fBmLxUJHRwdXr15Fp9NRUbF2xIvq6mqqq6sBeOmll1bidMLWB8ZSMsw4CdyX3ZWBsR7juj0O
      mWbqlsvNnCQvA909q33+F3fxWIsrlr9lI0VmBbPZzPT0NMlkkkAgkDGKXCQSwQBh0rMAABRC
      SURBVOv1UlFRsWdiDeV4kA0ZwG5NttDT00NjYyPBYJDu7u60D/XY2BjXr1+nsbGR3/3udzz3
      3HMrLUKO7KMoColEYmW/yfXr1zclTMy+WAn+D//5NySSqfuHv3e6k+MHqh74n9/vp6amZmUG
      yOfz5QxgG3G73fzDP/wDzc3NKIqyri7zetgXBjAw4U5rAL5g9JH/HT58mOHhYa5cuUJ9fX1u
      HWCbKS0t5fvf/z7V1dUoisLo6OimlLsvDOBx+ODyIP7QaoMoZtoW5He2WwAcaq6gqz77MSz3
      O36/H0EQuHDhAoFAYNPyJOQM4CEuXhtlem4h5XGNJOUMYBtwu90rabDeeOMNrly5QkNDwxOX
      u69cIXLsXpqamvD5fAwPD/Ppp59y4sSJTSk31wLk2BWIosgLL7zACy+8gCzL9Pb2bkqk7A0Z
      gCInicQSGA15i1Oiqko0GkGQtOh02nXtzs+R43FwOp38+Mc/pqqqCkVRMBgM22cAt3tvYDTm
      IZoqaKkrI7Qwz8ycH/fcHMdPnEC3AzPK59jdlJWVcf78eVpbW5Flmf40qZAehw0YQBIkA20d
      3dzsvQV1ZZisJVQDHu8CkiCs+FrsNF+gVCgPyGbyU1FyvkDL5WbZF6ixsZFkMonf7ycWi63p
      67Wecp/QF0hEVWVUOYog6lFVlYh/jv7xOY4f60ESBWBn+gKlQnxANpOfiogkSTlfILLrC6Sq
      KqFQiNHRUSoqKjh27NgjHgkb8QXaQF9FpLq8iFt3h2lrP8Do6CjhSASdqDI0dI9khjddjhwb
      weVy8dFHH2GxWLhz5w7Xrl3blHI3NAYoq6qjrGpxP+3yCmlJ5abokyNHSkRRXHl7b5Y/Wm4a
      NMeuoLy8nNdee42RkREOHDhAVVVV5pPWQc4AcuxoFn71ITHbyMrn5WS8c0u/9W2tWN56c8Pl
      5wwgx44mNjxM5JvU/f0n7QnlJuxz7GtyBpBjX5MzgBz7mpwB5NjXbMgAbAN36L3xDQ5PCIB4
      NMjNr7/E7nt0Z1WOHDuZDRiATDCmcPjIUeyTNgC0ehPNDVXEk8rKpmVVVdeVJG8lod56kr0p
      yspPJlRF3aBsxgxuS3Vb34r3/YSBGYp9QDZz2RuRVdYju1S39ciuToj4WLKZil6daPExyl1P
      krz7z+ai7Aa7QMIDvxfzT2WTrfy2vevMvXtqJqzx19awoSR55jyRWzdvUt20mCSvqqyEe+PT
      RIQFKgq60WuWM/Fltq+VzIjrCD++6GC3ziyR4mNkJXwM2eVkb+tdir+f+TFDsQ/IbnJ2zeUs
      kevKxCksZYlcX/K9DWV+zFS0kNmxba1yM12L5aydT5glEprbu1f+LitYTIx39MTzGykqR45t
      JTcLlGNfkzOAHPuanAHk2NfkDCDHvmZDg+DBOzeJJhKU1LRTU2Yh7J/j7r0pREnLsZ7uXRs8
      N8f+Y0MLYVFZoufoceZmxwCYnbXT0X0Ik0YhupNTxOTI8RAb7AKpqKoMS/P8oigiKyoqsI4p
      +hw5dgwbMACJQrOeW723qW9qY2TERm1dHWNDd1F1+ehy+XRz7CI2NAaob26nfunvIvPiQtiR
      I0c2S6ccObLGigEEg8F1BadaL+FwmHKLhu+faUsr5/f7UVUVgyRnlFUSUXy+BImkklE2X6fi
      8/kQBIE/ON2aNjBVVYFuRfatp+oIReMpZZuq8gkEAsiyjNT0Nmrp8ZSyiYI64kv1UyqfR9Gl
      Dp0hmEpILMmqhV3IT/371JXTGpCXZfOq08sCSiCIigCqiWQGWTmpJRILo+p0SN/5/bSyEYuF
      2NJ1k751DjWROkhWrLoKeUmWl19GCgRSyibr61eeC+XpE0iNjan1LS9bkU10dCCZTKkVtljw
      +/2Ew2FKNVpeqalHULcosa/f78dqta5LVpbldWf82CpZRVHW7eMTj8dJJpMYjcZN12MnyG7V
      vXuca7zssblen6CN1i9rHXZVVQkEAnjn7EzZ5x5wc11L8Xg0jMPhIPzQ23gt2UAgQCy8wPDI
      +AMusWvJhgIBkvEIQ8M2EqtmrNaKNSMn43g9HjweD9F4Im39kvEI4ViCcdswC+FYBp1VFrzz
      uObcyA+1TA/LqopMIBhizj6Ffc6bodzFa+GfdzI568p4jSOhIB6PB6/XR6Z4ZsFAgHgkwJBt
      7AFX6bXKVeQkLqcD30LwAR3WusbRcIhYPI5teIhI/H4PZC1HOzkRIRSNMzF676EkJmtcN1XB
      7/Pi8XgIhCIp65W9EauaYGpqhokZF8F5Z4YLrnD3Th9arZahu3eJp3U3V5mcnMBmG0WXjOBN
      L8z45AQTIzbyjVrsc770srYhApEosVgMOcP07tzUGAteByHByNT4VFrZsHuaUecCghKnf9CW
      VjYe8uGY9zPj9OBxzqSVhSSTk9OMTTmIeF0kM1zjwcEBYrEYsVg8U0RUJiYnsN0bxUAcTzj9
      y2B44C6yIDE/O4ZjPphWdmZyHI9zEslkZmxkOq2se2oMv2+OoKJnemIyrWx4fpoxh5dYLEYi
      TdcsewYgaNGLCSpqG7EWFWX8YllO4Pf7iYYDjI6OkUhjMcVWE3nWUgwWKxZt+pIrSwpJaM3k
      G/IoLDCnldVLApNTU0xPTxOMxNLKFlfW4HD4aa4uoKSsNK2sqJEIBwIEghE8c3ZmHHMpZXUm
      K0pwjtqmVgqLitOWCxIGjUx5TQPmwqIMMxwCiWiY6elpZmbtZFq+KSkwo7MUYzBbsORlKFlV
      CCwEiCcSTIyO4A+mfgNXVJYz509Sac2jtKosbblFlbW4HB6aqospLk1/jfXGfOamJ5iensbt
      9aeUy2JcIIVEQmXeOUtDY1MGWYHOzg4mZly0dHZhNpuR0nQbY7E49qkJSqrrsJapaNI4nHsW
      QrS1thGatxMKRTHn5aeUTagSPUeOYtCIGfcrJBJxRFFlxuGjvjZ91DK9pZymyjhRVUt3dzdm
      S2pDVBWFWFzGdm+YYmt6gwUFWcyjssTK6D0XCpC6V6ySX1DKgfYDQOb1m0QiQSQYwGKpRZtB
      uOlAJ2O2EQrLaqg1W8jT61LKJhMJ4mEf49MqBksFWA0pZUNeN9Ut7eTpFGYW3FBamFrfaISm
      jsM0VFjTbsbIWgsgCCL1jQ1oRZlrN3ozNrlDwyOQjONzuVA1+rQbNPyBEFVlRURDAWIZXmWS
      msRmG2F8yo5Wl97+i4oKmRobxWazsbBGJsnVGC3FVJeX4J+bYnh8Nq1s2DOLOyoSWgjgdDrR
      abUpZZPxMKrOTL5OJBgKpy0XRIK+ecbGxvCFopniXGPK02Cz2Rgdm8jQAghUVtdizTfQf/Ma
      gVj62cKR4SF0kkAoGsbtDaFJky/C6/FQUVODnIgRDqevn0avZ3L0HiMjI6hSaqMC0JoKifsd
      2Gw2HC5PSrksDoIVHE43NQ2tvHjyRIY3joBBLzIzO4svKqNLo6WiqBxoayUiqxSVVWXsAtXU
      NSDHwmgNZgwZDEBRFRKJODpDPiZD+gseXvAQlkUOHX2azuaatLJ6k4Wwx8Hs9CQaQ7q3uoom
      z0J1iZGkKtDY0pq2XBBoaKwnGAyuo7sEiiyTSCSxFhWnbWFBxel0YC4q58UzZzJ2gSxmE7P2
      WaamHVitqVtYVVWobW4jHgwi6s20NqZvOU2F5RQbJaJJgcI05cJiy5lMJlGQKCywpJTLigHI
      iShD/f1MTE8xNnKPL69cyzAIVokrGl557TWeOnow7c0JBAJ45t2IGh0hvyfDgBmGh4eJRuMY
      NMojszUPU1BcTqHZyNzsOI751PPW/nknfXfv4HDNMXDnBv229IO5ZCyEpayeV187S1tjOmNR
      8Xs9eLwL6LQaPPOp32RLJTM2MU0yoRD0zWdoZQWqa2vRSjDU10c8pbDK5KiNYdsYs1MTfHn5
      i4wtQCAY5sjJM5w++QyF+fqUcrFgAK/Xu9hqy3H8wfQtgHvyHr6FEHlmC3Nz82lltQYT1RWl
      JCILDI1MpJTLigFI2jwOdLRjNVtpa2vDlKfNuNtfp0a4eq2XoeERUue4VvG5nTjn/SiKQiwW
      yxh9oaComKqKIua8gbRNM4DP7SAQTVLX3E5NWep5cWtxOY21VZRW1tDW2oKSSG9Ykt6Ma7yf
      u339TKcZACeiYex2O+FYYrF+8dQLdEslU1ZeQZ5WIZExUIPC1OQkmjwTPUePoE95KQTqmloo
      KbTS1NJKTWkB8QwLpkWFZq5+9SUDAwNpXzKhcJCZmdnFbD6JGMkM3VeTtYCqujq8DjsaXepu
      I0AiEmTGOU9hSQXd7amTnGdvDCBqaKgp5cbNXqrrmzI0uSIV1XWYDVoshUVo0tyc+uZWdFot
      nZ1dlOXricrp73w8nqC0qoHjx49TYkk94ALwe31YCotRwm5Gp9O/cUpqmkl6pugfmaWlpSGt
      rCYvn7qaSkRBoKgodc5hbV4+zfVV5BeU0dXViRpPPZuyiEo8nqT94BGO9qRvOQEWgmGKCguw
      DfQRS3vZBNraWui/3UvSVEyRIf3DV1BUSmlRAVpDPuY0Xcfi8mrMeVqa2zvpam/EN596tgYg
      kUgi6i089dRxWhuq08omIwEUrQmTQUNf/1BKuSyOAWSGbRPUVFUwPjaWcR1gcmaOrq4u/PYJ
      ohluTqHZwJ2+uziDcfIzjAG0SpjPv/wGm22EUDT1fLZ3zoFz3ovf6yEci5NMM5cM4LWPE8SA
      1SAwNeNKKxtyjpLMr6ajvYV7g4NpZXUmK/EFJ313+5AM6fu9AI6JYe70DTI2OZPmGitMjo0R
      DIeZd7tJJOSMkxLDg0OUVFThd0wTytC8DA3ZONDVRXGezKQj/UNdUVHBUN9t+vpHKS5Pn4Bc
      l5fHta8+5949G3Oe1OXGwgtMzjoJLvjweBfSxgvKanh0VVWRFZVo0Mf0jJ3q6sqUbyk5HmJg
      YACvP0BicJC2AwfQrym8GMRJBBAFkgppWgyobGinrG4pQVqa/FaWohIOHzFjn7WTVPIoT9MF
      WqybAgpodDqmJ8cptBopKVz7HJ3JgvPuEAmPEb/Pw9iUncbatf2EFFlGFKXFRa2MXisCTz1/
      msX0ZWKaWSCBypparFYrrnkvRWVlGR8EeSl4mUSSsfEJmutrMerXbgkMOpGB/kHUeJBwwovZ
      1EaRZW0fnUQyiUaSUBUBNUPXSp9fyJnTpwAQ07g96PLyaWzrxOx0EIrGKStLvb6QNV8gVVWJ
      hEMrbyVBEDEajU8c3x1UZHkx2teUbZjS5vaMrcB6sQ3cIRSKUlhRQly10FK7OLOyli+QnEwQ
      id7v72q0urTz3+tFVdUlJ8XFHGxdXZ1PXOYiCjdv9KKqoNdItBw8vDIOeNQXSCUWjZJI3n9A
      8wzGjGOodWmxFNUtGZ5n0gNtDeVPXCZAaG6SYccCOp0BJRHnYHfHyrHV9ctiC6AyPHgHrz+G
      1mjiuaef2oSHfxHnzCT+UJRwKErFJm7IMVsLKSoWGJ2cpay6IK1syOfi1u0hpPx8Coqr6WxO
      30ddL4ocZ9Q2iqyqKGL6vvfjIVBSWko85Gd+IZYxVtXU+AiTsy60koYjz57clIcfIOhzM+Oc
      R5HjWErqNqVMWFwJLis34ZwaRWdK3bXKngGoMtq8AoqkOJIoZJwFehwknZGOukYC7sXVz82i
      vGpxirKoLPPDHAksUNtQS0xjIpFhOu9xUJIJSipqKSrIx+lwblq5IFBbWwvUknqO5D6xJFSU
      FmPQaYkmZPJ16/O8zEQ8odB6oAONEMfpSu839DhoTEVUm6C6LP16SPYMQNDQ0XGA8IKXiKLd
      tK2T884Zbt68S21dLaFgmIPHSjan4MekrKEdFXDOTFHYmtp//fFQGBm4y2xAobzYQhId5RWb
      00V4PAQ6OjtR5TgzTi/Fxs1piWIhP729NymtrkOUYxSUb9Z1Wz87Yj/Ak6HicroosOYzZffQ
      1FCz5VEpHnc/wJMgJyJ4A3GEZAhZk09ZUepVzc0ie/cOfO458qwF2CcnqKpvQp9uBmOT2Jb9
      AFvJ3NwctuF7CNEAvkxLwbuMZDSMdyHI1Owcrpn0LsC7kXm3C59zCkWnZyTDCvpWsCcMoNBi
      QGsuxmi1opEzrZbuLnRGC8nAHFX1zVgLrERje6t+5eWlODxRqgpNmK2mjG7Zm80eSJMqUFV3
      fxg30N9PR+dmTRVuP4KkpeNgDwBJo8LYlJPWltpt1mrzyC8so6dwcZ5eneknWlqMKYtP5Z5o
      AXLk2Ch7oAW4v1gkiiKFhak3SexWVtIbCdq07sW7kuWFPlHEVFCIJsuB1faAAajYBu/itLso
      rKyhPqPP/O5Cjkfovd1HTIZCi4mOjo7MJ+0i5uwTTM440Bvz0ZtKKd6c5YV1sye6QLFYHKs5
      n0AwtN2qbDqqkkSVdOiEJNH45sVt2inEYzFM1gIiwUDmPFJbwB5YBwBFTuCwOzBaiykwb/3c
      fDbXAQCioQXmPAHKKyvQabb+FZnNe4eqMj/nJCFoKS8pykpk8T22DqBis42SjAa5c+sWodS7
      Z3YlycgCM+4gbsckd/rSu07vRqbHbSAJjAwPMJZhz8VWsAcMYNF12rGQoK60ILPH8G5DEPE4
      xjGW1JKX7RFiFpBEGBocpaOzleQ2vLz2gAEIVNcs7h4LKyK6PRafXaM3UlVZiRJdwJCf3iN1
      N1JSXk1JcQFOh4eS4uzPcO0BA1CZmJohEY+TJySJZYrxt8uIBb0sxGUScYFIMH0ku93I1Pgo
      SjxGQWkR7vmFrH//HjAAgdKyckoLzbiDcTZpL8yOQZtnoqigGI0QAU3qCAu7lcKSMiprq5md
      mMaUn36P9lawBx4XFZ/XS0VdE9WFpoyBsXYbciJKIBSh89BRJGVv+QEBLPg8aEzFHDnUStC/
      efsB1sseWAgDDQnu3LlDJByjp2EP2PQqJG0ePtcwd/xu0GVn2jWb5JuMDPbdRqMmKKltz/r3
      //8PzbgQWk3vegAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Base_Source (2)' width='192'>
      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
      Xi8+v5//Apq63UJVcxf6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Base_Topic' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Base_Topic (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5BdZ3bg97v3vpxD55wbaGSAIAAOMeRQJMjhDMMk1oxG0o60kku13rVr
      d2vLdrlsa+2tdWmtVdWut1zWeKWVpjwjTeCMGWbEYRYBRgyJ0I0O6Jxf9+uX83s3+I9GN9DA
      C92NB3QTeL+/+n593r3nft8990vnnCtomqZRocJ9irjTClSosJPcMQOIx+N36tQVboNQKLTT
      Kuwq7pgBKIpyp059X3Lx7K/5/976END40ff/ExPL0VtkPnv7RS7NXn/xLI18wN9/PLJ+nIsv
      8eFnq8fx5Sn+7N/9Kf/2f/9TPrw0nveamZifjy4MlPdGdhm6nVagwuZYmPczGpwj/UAjM/MB
      euMJ/uZnf8lSUuT3//B7/PwH/5mZ6Qme+69O8hf/5/fJmWt57mQzOfn6i2i4f4A9B04AYKtp
      4x9/41HenDRwoq+ev/gPf0YcG//oW4/zn3/4Moqs8Ye//01CkQQfvfkS5y7P8p3v/T6NHutO
      VcEdoWIAnyN66u28/MZvOHTsILJ/lFzdEX6nR+CXr75Cdd+jHO1twDdxmZS5EZscIpTMrv9W
      0zRmVpI8dfLWBzg4eQnvgcc5rZ/jwtAkHYdO06ObYWjSTygcYmYpwL/45/81wt282btEZRL8
      OUEURfoOHeLSlUlaPBb03jZiI2f5q1+c4wsPf4ErZ1/mtbOfUtXURXZ5jLiiw6SXEIXVx1ZJ
      LiNYapCEGx5jQUQUBVxNvUx88DIvvneF3pYaPnjzJX5xdoSuBgeiZKDFLfDv//w/sRBK7NDd
      3zmEO7UMGolEcDqdd+LUm0ZRFERRRBB29t2lKAqSJO2oDgOXhvB2dlNvK97pp31DvNKf4FtP
      PFB2HTRNQ9M0RHFn37s3tseOGoCqKqRTGQwmE6gymWwOg9GEKmeRFRVBEDFbzKtdr6aRzWbR
      G4xs9nmOx+OYTCZ0uq2P9BRZRpCuv0FBQ5aV9XPJuSw5WcVkMiIIApqmkU6nMBjNSOJGBTdV
      F4pMKp1Bpzeg5TJgMGPSS2iqgqoJSNK1h0bTyGRzGA06EskUgihhNplK1klOURHRkCSJbDKO
      ojNjNtxqlJoik5E1TEb9hvJsNoNOZ0AUBTLpNAaT6ZYhUTQSwe50ouSyZLI5QMBsNpJKpREl
      HZIoIMsyFoslr46apqEoKqKgkcpkMZvMaJqKKEnr19JUhVQ6g9G0Ws9r9QZgNJnJZlIgiNfq
      JH+l3Nge0p/8yZ/8SfGq2x6ZTAaTyVTw/5qqcOmzz5BVlXROYXlynJiiMDk+gdGo59NPPsVk
      c+B02hGATCLEr15/l47uXlKRFYKxFDarpei4NJvNotPpNrxxlFyGmZk5JIMR5DSL/jAOu5lI
      IIg/HCOXjJJDRyYRQdSbiIdXyx12C4GVIFarFU3OMDYxRWR5jih23DYjs2NDLIVjzC8sU1dX
      vUGvUnUBEJgcYjKcZXFiGE0ViaRT5GQVg6iQSF9/IJfnJ/jgwjDdjVY++HQSNb1CJG3A48z/
      UK0hiTA8NEJ1TTWxpVniopVs1E8onsFuMRJaWSEUS5KKR9CZrCiZOHMLy9gdDkRB4LMP3yUj
      OXCZ4Gc/+xW9B/sILy2Q0STMBh1Li3OMjM3Q2NxAJhFleSXAZ59epNptYmTKR2xphrTeic0o
      odfr8yuppenvH2NpcQpZVpAFPbPTU1RXX6/PhZkpIrEYUzMLNNTVIGdT+JaWGem/iNnhYnBk
      FC0ZZjkJ1S5b3svc2B471hfJqQB6ewMWg0gmm0MUJRwOBzpBoKq2gZqaGpqbG0hGI6TSaa5O
      zNHV3oiciTI+60eOLrEQiG3xqhqDV67g8bqYmp5jYHAYsxBnfNbH0PAMSf8ccc3A9OQ40ZCf
      dCbF0OgMWnyZQEJjZWWZeDRMWhHo6mgjlVVw2Y0ABBJZ+np60alZ1G3ViIDN4cBk0KFqCukc
      LM9Pk0klCMcThIJBMukkSxGZOvdqw2ZSKaKxJDZH8Ye/UF0oKvhnx/BHIoxOzBOcGUcx25kY
      HyWXk5G0BEOjcwBYPbVkogH8vkXqm5uI+2fxxVWmxkZYnBkjLViwmlcfbKvDTWOti4a2TiQg
      nUwSS8vYzIZNaWYy6ImnZZz26xP2bDpFJBqnoaUdg6Bgsa++wfUmK60tTVg9dVTZ9GTTKcKx
      JA7b5upkxwxA1JvJpmPUNTUTDSyjaRqZbJa+gwfR3fD6zOWyxEJLhGMp5mZnWfAtYbY5cbsc
      pFKZLV5VQ5CM2K1mJFEkEvKzFEhiMQo4XW4sVjsetwud7nq1eL1VWC1GZGX1sc5ls8hyls8+
      vUDnviN4rKsGoBc0ZE1DhW2ulmhkMxlaew9g10vU1FRhMOhAu/4/3+wEyUyG2dlZIokMze3d
      7Ovrwb/k2/LVlEySOd8yBr2enKzgcnuwWR243E4kUWB6Zhqd0YSaWVtJEjEIKsvxLB67iVQi
      QTCwjCboSSQyeKvcGA3XH/CJsUk6OtoAgbauXvZ3NbLgDxevATUHop6efUfoba9n4Mrw+v9U
      RSabyzE5MoBsdLOno3n9f0sz49Q0dyAA9S0dHNzfw4rPv6l62LFlUMlgo95toH9gCHdNPVYJ
      XHW16wpV16x2e25vNQA19a34FuaoqmtgZmyEqWWBPXsat3hVkdoqO1cGh0mrJvb07iEYTWIy
      WfF6jRh0KgZJwOPxYJTAoDfgdtkx6c3oDSKC14u7qgYlHQW9gZmJURpb21jx+enqbGOw/zI1
      ja3bequYnFW0Omuw6QXiWSfoJdxuL3qTBYdewuOwAvW0AvM1HpwOF1fHRxlLiLR0793UNSQt
      y+DgEA211djNVuJ6kayix2Y2o0dCp5jQAV6vFzkVIxxJ4vbUwLUyr93I+HIah0OluqGGSHwY
      VTLS3FrLyNAAgrQ2L9CwumuwGSUyZisrY1MEBWjt7OGaRd9CPLzC+PQ8PXv3M3F1iHROob2j
      i8jSFINXBmnt7KbaqyewOI0SWmZGVdDScZq6usjprDRX2VBzadLhcYZjEk1t3Zuqk/VJcDwe
      L+vubTKZLDjZuVuk02kMBsOGOUAikUAvacQzAh7n3dnU2Q11sRuQZRlFUTAajTuqx43tsd4D
      2Gz5Jwy3w04vg0qSdMsq0JpO1XdZl52ui91ANpstugp0N1lrj23NAcIrPi4OXB+fZZNRBgYG
      uNQ/iKxWvKsrfH7Y1hzAaHVikILrx5LBQt++fQxe/JR0TsGsE1BVFVmWy6bodlAUZVc45SmK
      suN1sRtYa4+drosbddiWAZjN5g3HoqDRf+E3uBo6sBp0CMLq1v12NqDKiSRJSJK0K/TYaR12
      A6qqomnajtfFje2xLU1mp8aYmZ7B6vAip2NYxSwrSRUpuEKu2o1BqrgYVfh8sC0DaG7rormt
      69pRLQB17eVSqUKFu8c90y/HYjHeeustRFGkpqaGEydO7LRKFT4H3DMG8N577/HUU09hNBr5
      4IMPWF5exmq9t4I3KpSfe8YAenp6eOmllzCbzWSzWY4fP042my39wwr3NffMbLW5uXndw6+j
      o6Owx2GFCjdwz/QAb731FmfOnMFkMnH27Fn8fv+u2HGssLu5Zwygra2Nl19+GbPZTCqV4sSJ
      E+RyuZ1Wq8Iu554xgO7ubpaXl8nlcvT29mIwGCoGUKEk94wBvP322xw5cgSHw8G5c+fwer0l
      o7AqVLhnDKCuro6zZ89itVoJhUJYrdZd4QdUYXdzzxjA/v37yWQyJBIJTp8+jclkIpG499J4
      VCgv98wy6DvvvIPX6+XIkSNcvHiRYDBY+kcV7nvumR7A5XIxMjKC2+0mFothMpmoZH6vUIp7
      xgCOHz9OLBYjnU7T0NCAJEk77ndeYfdzzxgAgN1ux263oyjKjmeDq/D54J4xgGQySSqVAmBq
      agpZlnG5XDusVYXdzj1jAO+88w7pdBqLxcLc3BwNDQ07rdKuIBwOY7VaK75RBdiWASzOTnJ1
      dplHHlr1uU+Gl7k0Mg0IHD9+DJ1494cfTzzxBIlEArfbzcrKCgbD5rKQ3YtcvnyZ+fl5AEZH
      R/nd3/1d3G73Dmu1O9mWAdQ3txOKp9aP/ctL9O4/TGTuKrF0DodRuutB8aIoMrKQQJ1f+0JK
      itYq8654893tQPBIJEJbWxsejwdBEHZFIDrcQ0HxN6PX68jlZGRFQSeJSJK0I0Hx//4nH5LN
      Xd/9/Z9/5xS1Va5dFYR9Nzh48CB2ux1RFHnkkUcwGAw7np4d7rGg+HA4zPT8EnI6RltLO4ND
      I+jNDmyGe2Za8bnl1VdfRZIkOjo6OHr06K54+HcrZQuKP3DwULl0qnCbVFVVcebMGSYnJ3np
      pZd45pln7us5UTHuGVeICtc5fPgwgiBQU1PDV77ylV0xD9qtVMYr9yDDw8OIoshrr72Gqqp8
      5zvfqfQABaj0APcgfr+fd955h8cee4zW1tZKcoAiVHqAe5Cnn36apaUlPB4PDQ0NlfQwRagY
      wD3I+fPnCQaDRKNRVFWlra2tMgQqQGUIdA8Si8U4evQoZrOZ5ubmyhCoCBUDuAd5+OGHmZ+f
      Z//+/VgslsoQqAgVA7gHcblcPPTQQ/T19QGrnwWtkJ87OgfQNI0f/OAHNDU1cfr06co49DbJ
      ZDKEQiFg9VtnHR0deeMeIpEIb7/9NqIo0tLSsuPf5NrN3PFJcF1dHQcOHOCVV17B5XLx2GOP
      VYJVtslrr72G0WjE5/Nhs9lobW3N61fz7rvv8swzzyBJEq+//jqJROKOfAPuXuCOG0BDw+pH
      r7/xjW+QTCbv9OU2TSaT4bXXXqO9vZ0rV67w5JNP4vF4buucuVyOF198EbPZTCQSoaenh5Mn
      T5ZJYzAYDDz22GOMjo4yMzNTUK6jo4Of//znGI1GZFm+5Ys+d4OJiQk+/vhj9Ho98XicZ555
      Brvdftf1KMUdnQMIgsCBAwfWjwcGBnZNrp7Lly9z4sQJ3nvvPZ577jkuX7582+eMx+O0trai
      qirf+ta31ocr5eLgwYPodDr27dvHqVOnCjq5HThwgBdeeIHnnnuOb3zjGzviDDc1NcXXvvY1
      stksTz/9NFNTU3ddh81wx+cA3//+97FYLIiiyPT0NEeOHLmTl9w0TU1NJBIJXnjhBaLR6G2/
      /QEcDgfV1dXreUnLHZX25ptvYjQaaWlp4fjx4wWHkloux+z3/mBDWf3/8afo72KU3L59+0in
      03z7299mfHyczs7Ou3btrXBHDUAQBJ555hk8Hg8mk2ndR2U34PV6ef/993nwwQdpbGwknU7f
      9jllWWZgYIArV65w5coVvvrVr5ZB0+vU1dVx5swZZmdnefXVV3n22WcLv91v7mnvcoaYRCLB
      hx9+iKqqjI6O8od/+Id3V4FNcsd7gIWFBS5fvoymaUiSRG9v75285Ka5dOkSp0+f5r333uPx
      xx9nYmKCtra22zqnKIoYDAYaGhowmUwbhn/l4MiRIwSDQZqbm6mpqdk1L5N8GAwGRFHk+PHj
      OJ1OvF7vrtyQu+M1uLy8THt7OyaTaT08bzfQ2dnJzMwMzzzzDK+88kpZwvT0ej1f/vKXsVgs
      rKyslEHLjXz88cecO3eOS5cucf78+V29vt/U1MTTTz/NyMjIrl7+3pYBBJfmudzfTyKz+tAo
      uTRDV65wdXyam5Ox1dTU0N7ezoMPPojRaNw10Ukej4fjx49jMpn47ne/S1dXV+kfbQJBEOjp
      6eG73/0uH330UVnOuYYoinzlK19hdna2LJP2O41Op+Oxxx7j0KFDXLlyZafVycs2hkAaU/NL
      HD6wl0tDoxw5uJeVhRmsNc3EFsdI5ZqwGK4/5AsLC7jdbjo6OvjiF79YRtVvj7m5Of7+7/8e
      i8WCLMt4PB46Ojpu65ypVIo///M/Xx9KZTIZTp06VQZtVzlx4gTZbJavfOUrDA0N7epAl48+
      +ojf/OY3uN1uEokEBw8e3GmV8rINA1AQRR2i3gzq6sTRYrczOXYVVdXQSavDnLWsEKIo4vf7
      +fjjj9m/f//69vwd4abeR1XVgkOuqqoqDh06xNGjR8nlcpw/f/62h0F6vZ4XXniB9vbVjyZf
      uXIFWZbLlgnh1VdfxWAwcPToUXp7e9E0Le95tTxliqIglEEHWZbX72l0dJSDBw/mnYscOHCA
      hoYGGhoaSCQS+P3+eyUrhISgZpkaH8birGNubg4xF8PpriIVXCKVU3Ca9OtZIdxuNydPnuTE
      iRNMTEwgiuKdm7zdtCooimLBjAzBYBCv14skSUiSxOnTp297hzoej/PJJ5/gdDqpqanh0KHV
      OOlyZYWor6/nzJkzfPrpp/ziF7/g61//et4hZb6kwGs6aJpGOBwmnU5TU1Oz5SHpuXPnOHv2
      LIcPH2ZoaIju7m6cTuctchcuXCAWi1FXV4fT6cTpdJLNZu+FrBAC+w8eIpZI4XTYyWQyGI2N
      2GMRxKY6rKbr3bIgCHzhC19Y/3tubu62V1rKxdjYGOl0mk8++YTDhw/T29t72waQyWRoaWmh
      v7+fQCDAI488Qm1tbZk0hr6+PgRB4IEHHuDQoUPbepG89957ZLNZHA4Hb7/9Nt/+9re3ZASP
      PvoonZ2dvP/++xw8eDDvww8QjUbZs2cPr776KiaTiccff3zLut4NtmWKkk6Py7n6oK99hsju
      yJ+HU9M0fD4fsixz+vTpsrz9L435GJ4JrB+31jo5ua9pS+dYe5DsdjuXL19mZmbmto1Tp9Ph
      9Xrp6+tDVdX17Gzlorm5ef3v8+fP8+CDD275bRqLxdi3bx8ej4exsTEURdmSAcTjcerq6tb3
      TlRVzdumDoeD2tpavv71rxOJREgmk7vyq513fB/g1Vdfxev1YjAY+OCDD/jWt75120ZwYdTH
      L84Orx8/cqh1ywZw/PhxJElCEATa29uJx+Olf1SCta4eVucfk5OTGx7a22V5eZlz584hSRJN
      TU3bWlE7c+YMH374IVNTUzz++ONbnkh/9NFHHD58eD0N/ejoaN69nePHj6//vbS0hMVi2ZUG
      UPBJlGM+zn42gqZkee+Dj7d9gUwmQ0NDA83Nzbvqq406nW59yKPT6cr2Qb1cLsfw8DArKyuc
      Pn26pPzy8jKvvPIKr7zyCgsLC0VlP/zwQ5577jmeffZZFhcXtzWZfOedd/D5fNTV1TExMbGe
      UXuz9PT08Pbbb/PJJ59w8eJFGhsbC8qGQiGGhoZoamqiqWlrL6i7Rf4eIJfkh3/zV7w7FORi
      TxPO5r1sZwFTEASef/55Lly4QC6X45vf/Oau2b2MRCL88pe/xG63E4/HefTRR2/7nOl0mh//
      +MecOHGC0dFRhoaG+NKXvlRQXtM0zp07xzPPPIMgCLz88ss8//zzBeuoo6ODF198EaPRiCAI
      25pMKorCN7/5TV566SWSyeSWlydra2vp6enh1KlTTE9PF3yrX7p0ibm5OXp7e/nlL3/JQw89
      RHV19Zb13SrpdJpYLIbH49lUD5m/BvUWfucf/zHNn03x6Il9zC4G8oqV4u/eGiCSSLO6PGOg
      Npiis2F3fLp0amqK48eP09nZid/vZ2RkhPr6+ts6p6ZpiKKIy+UinU6zvLxc8jdOp5OXXnoJ
      URQxm82FHdw0jf1797J/797b0vHEiRMkEgmeffZZ3n///S3v0n744Yd4PB5efPFFvvjFLzIx
      MZF3E1FRFCwWCy6XC4PBcFc8AEZHR/nss89YXFykoaGBp556CofDUfQ3BV8hajrExaEpvni0
      gxdf+RX/4p9s3ZnpHy5OsxCIrR/vb6+hs2F3pOk+ePAg77zzDiMjI+h0On7rt37rts9pNpv5
      +te/Tn9/P16vlyeeeKKo/NpE/OOPP0YQBE6dOlXQAHIzM/j+u/9hQ1nz3/5wyzpevHiRhYUF
      HnroIUwmE7lcbkvzAIPBQGtrK08//TTpdLrgW/bo0aPMzc1x9epVHn744bviC+Tz+XjkkUf4
      4IMPOHHiBOPj4yW9jwuOR3TONva4U/zlD37C42e+XHZldxpl+n1ON6R5skvkt9pUpORSWc5r
      WPyYQ5GXaZr4L6Rf/x/JXvh/C8pqmsZrr7227jr861//GlVVy6JHITKZDN/97nf59NNPmZ+f
      3/KHBI8dO7b+DeZsNktra2tB2f5kjFmbmTfnZ/jx5QvMRsK3q35RTpw4wdDQEL29vVit1k05
      IxbsATQ1x0oggru+hbGhKxzsKjzZ+TySOfcfUP1D68emM/8G0Xn7EzV1ZQR58OUbLhSDjmcK
      yhsMBi5evEh1dfUdf/hh9c2cTCZ5/vnnef3117c8BFpb/x8ZGaGuro7JycmCvv6DSz6WE9dX
      1zpcbuqtdy40c3BwkGPHjvHTn/4Ul8vFyZMni07SoYgBKHEfCxkbh3Q5hqb9ZVe2wvWNwuXl
      ZTRNw2q13vFFgvn5eVpaWvjpT3+67rK8FRobG3n//fdZWVkhlUrR09NzhzTdOrIsMzk5SV1d
      HW63e1MhuAUNQDQ4aas2EE+ovPDNr5dV0c2SzSkMTG6cSB7sLN/O6k6jaRpnz57F7XajaRrR
      aJS2trY7agTz8/NIksQTTzzBhQsXkGV5S/sJvb29NDY24vP5sFqtZVs+LgdHjx5lcHCQVCpF
      a2vrpjx8C6+jiTA1Ps1Tzz2Dmrvzfuf+cJJ09vo+gcNqIpuT+dd//Q8b5H74P+2MMd4pJEla
      jx3O5XJ3PGPGE088weuvv86FCxd44IEHtuWrb7PZ6OrqYmFhYVt7O6qqcv78eVpbW6mtrWVp
      aYm6urotn+dm3njjDcLhMEeOHKG7u3tTdVnYAFSNgw8cIxEJIelNQM1tK1iMv3j5N5wfvr4R
      9NuPH+Cxo2139Jq7gTNnzqCqKgMDA7S3t99xAzCbzTz33HMAnD17FlmWt7QKtLCwwHvvvYfV
      aiWbzW4r7HN2dhZZljl79ixPPPEE/f39ZTEAnU7H888/z8DAAD/+8Y95/PHHqaqqKv6bgv8R
      NCYn5/ne976DUb87glh2E5oqoy4PbSgTq/ds7RzXNsKcTieKovDWW2/x7W9/+44OgVKpFO+/
      /z6qqtLd3b3lzbTBwUG++tWvYrPZGBoaYmpqasthri6Xi+npab761a/ys5/9rGxpW9rb29Hp
      dBw7doyjR49uaoWraA9gNsj87Cd/R13bXp784vGCovclmTjJv/3OhiLrH7655dP4fD7Gxsb4
      oz/6o7KnUcnHG2+8wcMPP4zJZOK1116jsbFxS8OgkydP8vrrr6+7j2xn/8ThcOB0Okmn0/z2
      b/82S0vlWYKOx+NomsYPf/hDcrkcX/va1wp6q65ReBJsduO16vBH01RV39nhz25HCYyhJa/v
      hov2BgTj7Sd5EkWR3/u93yOXy6HT6ejp6bnjQ6CamhreffddTCYTmUxmyz3AUibNwUeuO8bI
      msZWxwdzc3MsLy9z5coVnn32Wa5cuVKWFDI+n4/Gxkbq6+vp6+tjbGyMY8eOFf1NwbuXI1OM
      R+38s+8+y3/8Lz/j2N4/um0FASYWQvzozf71Y6vJwD9/oXzZ025GHnyJ1Dv/2/qxWNOH9Ts/
      2tI5sh9/H3nkV+vHhgf+AMMDf1DkF1tjbQyuKAqapt1RIzhx4sT6dW50CNws3z//4Ybj//ah
      L9LgKP6WvRmbzYbZbObZZ5/lxRdfLFvaxmPHjvHpp5+yf/9+wuEw+/btK/mbAgagIdqbabe+
      x1/+4O84/ciTG/+raSiqiiSK6xWoqgqaBqIoUaxOI4n0hsmu03ZnE7dqmgrqDV6TamEPSi0d
      QZn/7HqBKKFrv3NxzJqm8cknnzA/P7/+UbutPpCaorAhE0GR3//k8gWmwsH140fbu3iwufBO
      7p3C7XZz7NgxzGYz3/nOd5ibmyvLeb1eL2fOnAFWh0MrKyslvVDzG0A2xv/zo1/yx9/7fZR0
      lL/88S95cP9awLjG0MAljBYbiqanp6uVWNDHfCCOxWqnuf7zu06vBidIvfzPrhfozdj/6fk7
      es3p6Wm+9KUvIUkSv/71r4v6A+Uj+Jd/ReLtd9aPbWeewP27v5NXNppJE7hhcygl74x7ejAY
      5G//9m9xuVyoqoper7/thASwGoX2xhtvYDAYEASBJ598suRvCniDWjGnfPz85V+RCc1SVX/4
      hn8qZGWRvs4uLly8ALSysrRALGMgtBKgqroKo3jtq+A3Rakrqoqi3LTdr63u4N08Y1dVFTmP
      B6Eiy7e4DKhrweF5guJvll0LJL9VN2X1bZpXtzzXy6fbtWQAN8sWCwR/8skn+c1vfoOmaTz1
      1FN5dV47d74yTd14H4UC5deGPRt0u5a44HYodm831/FakgKbzcbJkyc5dOgQqqryySeflCVQ
      /vz58zz66KM4nU6mpqbo7+/P6+5dOihekPi9P/5vmJueRrKcoKHGe8M/JRQlSyoWQDI6iUQi
      uN0esmkTkk4hnVOwWFa32IWbotQlUUSSblriE8g7FhVFEV2eHUpJp7tlmVBc843PExQviiI3
      Pk5rfvQCwobmkUQJ8ebrXdMtJ+S5Xj7dJAk1j26FguKzM7NoH33E2jRN+uhjdF9+6hY5ALXA
      9QRx400XihNYi37boNu1xAW3Q7GA/5vbfy1JgSzL7N27l4WFBS5dusRjjz1WlkD5I0eO8MYb
      b2CxWNb3KArVRcmgeEGQaG7L1y0J7NvbzfTCCn29HYQCK1TVtpKenyHnbcBt3r25anYbufk5
      oj//xfqxrqEe+5efIvzjn5Cbvz5Psj32KJL77rqRn5+bYdh/3Q2ly1vFqZa2spx7fn4eURS5
      dOkSjz76KOfOndvUcKUUmlHlt7762PqxqCu9n1La7JQMv/6Hj3jysUfWi0xWJ73dqzP/tSif
      uqa7P5m6V8kMDZEZHlk/Nu3be9cNYCEaYWBpcf3YXMZUJg6Hg3fffRe73Y6qqmX7htm/eumf
      kpavJzn+X578t+gkPR9Mvrde5rZ4Od10PUqvcEBMNsbPf/FLkCRkWaV/dJYD3XWwENsAACAA
      SURBVOUL8L7fiL3xJtoNASGWEw/uoDY7S21tLS+88AKwGsJYyl3hdpiPzPL3Q6+sH7e62zdn
      AErCz0xE5PefP8Vf//SXTL/8Mw78y39+xxS914n85KeosevRcfqW3fEy0TSN7E0TbMNdyN+q
      aRrZbBZRFMv+HYWtUNAAdM4mavgVP/rJz9lz4CS5aPmzHVfYeVaSCf7s7Dsbyv7NE0/f0Wsm
      EglefvllvF4vsViMvr6+krG7N/LmyGucm3h3/Xh//SG+efg7hX9QhMJDoGQE7DWcPnyUns5W
      TIbK5LZCeQiHwzQ0NHDq1CmCwSADAwPs3UKw/0rCz1X/9bxQXuv2h1AFp8mSrZqvP/0Y59/8
      GX/2/R9v+wIVKtxMQ0MDbrebt956i6GhoR3NGl4kJNLPT15+gwce/yZ93e13U6cK9zDBZIDB
      mX4wgNQOSMqOfkAjvwFoGorOyr6Oet557SWm50/x7OMP3WXVKnxeUDUN9YZdZoHVTc98LEbn
      +etPvr9+bDPa+VL3ziXOLeALFOVf/cv/njPf/EfkBF3l4a9QlI9mp3hpcGD9uNXl5p+cfHgH
      Ndo8+c3U4OBf/69/giUXRE7GefXtD/OKVajweaeAE4eAy1vLl848zZfOPL1rPmxX4d7lR5/+
      DYO+63Eij3Wf4bGeM3f8upva394tH7arcO/iiy4wERhbPz7cWDySq1zsjlTNFSrsEBUDqHBf
      UzGACvc1FQOocF+zLSdvVZFJpDLYrJb1KCNNU0mns5jNuydXZIXPNxk5w8fT728oO9VW3v2F
      bRlA/6ULWG0WFvQeettXv6rimx6jf3qFM49UNs0qlIdENs7//f5/3FB2uPGBsl5jG0MgGU00
      0tXTRzLiWy1JxwmkBGoc5tWUKdeCwz9vQfG37HeUMSj+ZlRFRd1sXSj5v3hfjqD4fOeVlTw6
      FDlvwfvIExR/S8B/gXvWNA1FznfPRdr/Zln1Vt3Wns9M4D3SS69sxwAkNE1BlTMIohFVVVmc
      myGdSTEzO0sslUOSpF0VFL/hcjcExW/UTbp1v2Ndt80HxefTLd8+iiiJiJutC0nMe45yBMXn
      O69OyqNDkfMWvI88QfG35D0tcM+CICDp8t1zkfa/WVa8VTfhWnukfT8jOf1/be9L8S311fQP
      XqWrt4/pqSnaOvtoFjQWaqpwWHbOs69Cha2yrTmAt64Jb91qxi3bekIjYUdD2ypU2A6VZdAK
      9zUVA6hwX1MxgAr3NRUDqHBfUzGACvc1FQOocF9TMYAK9zUVA6hwX1MxgAr3NRUDqHBfUzGA
      Cvc1FQOocF9TMYAK9zUVA6hwX1MxgAr3NRUDqHBfsy0D8M1NcfHiRcKJ1Y++ZVMxrgwMcPnK
      MMpNMaoVKuxmtmEAKgv+EIcO9jE5dhUASWdiT98+JDlBKldJpFvh88M2DEBDFCQEUQ/aaiS+
      KAkMX/4Ui7cZq0GqZIW4SbaSFeL69XZLVoi1y20jJlhCR5b+SxdweJuZnJjAIqZZTmjUW6LI
      ahX6XZYV4sYquDErxI1VvppBIH9WiNwWskKoW8gKwX2YFYJdkhViTbVtBcXvO3QMRVWRRBFN
      8yIA3ib12kWF4j+uUGEXsS0DEG54A65Zrq7AN6EqVNjNVJ7aCvc1FQOocF9TMYAK9zUVA6hw
      X1MxgAr3NRUDqHBfUzGACvc1FQOocF9TMYAK9zUVA6hwX1MxgAr3NRUDqHBfsy1nuOmxYUKx
      BPVte6h1W5HTcfqHRhENZg707aHiEFrh88K2IsKCsTSHDh9iYXocgMW5aZo6+7CKOeKZWwMT
      KlTYrWwrIkwQxGufDlWvlWirwSeCgKpVYoIrfH7Y1neCLQa4+NlnVDe0Mz4+Rk1dIxNDlwml
      NOymbY2qKlTYEbb1tPb0Hbx+UOME4PjxY2VRqEKFu8m6AcTj8bwB0tslmUzyQJeHSL11vcyq
      1zAIMo/sr1svMxt1RCIR9jTaseiul9c5dGTTyQ2yAMlEjCaPYUN5Z52FSCTC6b5a5BuCoA2i
      QsJQg9r53HqZYK9FjkTINpxGc/Ssl+d0VQiykdwNskh61EiEnOcgaqd+vThr60JKpMneKAso
      qRyKpRXlhnKxqotcMon64HHUdHq9PKHXo1ksqF946PrvnU4ikQi5vr2oXu96ecrlJqdqG2QB
      opEI2ZaWDeWZ5iYisdgtsjFFodlsxeS+PkS1I5BNJDng9m6UjUap0uk3lNfojUQiEQ66vRti
      qeVUCqvKBlmPebU9umwOag3G9XKToqFpZh5qeGS9zHjtvF2OXgwNpvXyWmM9mURmgyxAKp6i
      ztiwobzN3k4kEuFE/cPklNx6uZjTYcOxQdZj8ZBMJhF1R1HNzQjazeH4ZSISieB0OjeUrUXz
      3xzUrChK3uDsfOVbkY3H45hMplsCpvPJapqGqqq3db1CsoXqQhCEW4LB75RuhbjdOlYUZTUB
      wibuI5vNIssyFovltq63WdlCdXxje9zVfYC1LA0AqXiUlWCYVCpdsLEkSULTVKLR+IayQrJr
      ZNJJcjen6sgjq6kKvoV5EqkUWoFzr5XFYtENqTuKya6ikUgkCupw40OTiIYJhKMF62Itk4Gq
      5IjFk0V1uLk8nUwgF0lWtiabTSdY8gdKtgdoRKOxDWU3P2A36yBn06SzhVcH19tD0/D7FojF
      V3UuVsepRIycUrw9Nhpm/vbYkY2wbCLE0MQc83NzTE5OlpQf7P+McCxBOp1hM/1VKh4js4kE
      XcNX+gkszDK36GMlmi4qG/HPMzI5RyqV2jDMKoxKOBQpKZUOLzE6t8T87GbqQqP/0gViiSTp
      THZTdZGIRjY8KHk1VbL0DwwzPzfH9OQEpZL7jQ5dZiUcI5VKb0qHbDpJMp0tKTcxcoVQYIUl
      v4/puZWisulYkP6hMVKpFLk8+YNuRSMcCt9SuiMGIEo65HQc38IciqAvKd/Y0MjK8hL+QOjm
      3Fd5yWXSRd96axgNOoLBIIvLAUyG4usBTk8NkpLG5/ORyuSKyq6RShU3KgBJbyCTiOKbn0XT
      mYoLCyKN9bUsL/lYCd7amPnIZlIoJZ5SQRBBzeFfWiQl35Je6RYaG5sJryyx7F9hM68CJZcl
      u4mH1Gg0EAwGmJldwGqzFJU12VzYjeDz+YgnS9cz5G+PHVmzlPQmenr3Eg8tIVo8JaQFgsEA
      waRMY7UHqCsomYxHiSfTaDoTSiaFTl98HFxV10R9YxPjM8tYjMWrIhmPElxexFFVzUooid1i
      zCunKTKBYBBVA5vdSqZI1w+gM1no7e0j4p/H5CpRF5pGMBQillGp8WShrqaQIPFYlGQqg2iy
      kk0m0AyOwg+2INLZs4emRIQUppIWEAoF8K1Eqa+rRdFAKiCfSSWIxBKgCUhSDo38dbaG01ND
      VX0j4+PTuOzmorLZdIJINIQkGpEx4nZY88ppmkooEEBWNWx26y090Y70AKmIn5VIjEAsS2h5
      sYS0SlYWcNstJJKpoj3A+PgYAKGleeZmJ5nxFX9Lzs7OMTkxhdemwx9JFpWNx+NU19aRSSVR
      bk7vdwPJwDyL4TSgMTU5yeDgUPHzLs8TjMWIZiVWFueKympqDgU9TouBZCpTVHZibLUuludm
      mJuZxBeMF5TVlAwLvmUW/WFSoZUSwxqNZFqm2uMkmUgUb49rOqTjK0zPzDA26Suq88zsHP65
      adxeJ7Nzy0Vl04k4ruo61Eyy6BBITkWZnl8919TUFCODg9w4ItwRAzA7q1HiQdo6OvBUVRWV
      FRBpafASDAaxeWqKKmw3mwjH4mRkjdraqlvyZt5MXbULg6Mak8WG21b8jdPa0cXKso9UVqCu
      yl5Qzmh3kYmFSMRjWN1VWM3F33q26kZSoRXa25vxVFUXlZV0Zuq9FgLBMK7qwj0hgMVkIBpP
      kFMFqqs9t+RNvRFBMmESczS2deKu8pJnTnsDIp1tjfgDQYx2N7oisi67hUA4SjKVo66+5qZk
      lLfS3FBDQjPjNBupqfUWla1uaiOxPE9SFWmoKywrGcxocopkIo7R4sRxUzvvyBBIlTPEkwku
      ffYpJpuT+rragrIaCvNLYY4dO4YoFVfX6qqi1mZFbG7BoBOxWou/1WPRGHPzSyzrJPYdc2PS
      FzavsaujdPUdQhLAkCdn5fq9adDe0YFRL9FmMaNpGrFYrKC8nE0Sj8W4dOEzTFYn9QWHNSBn
      E/ijOY4dO4qoKz53cnhrsVmttDQ3o5NuXabcgKYQi8eZXfgMvcVGbW1dkWGQytSsj6PHjq26
      xBTRQW9x0l5rA1GH0aCj2iuj5Eliu0YsFsW/MEfYr6Nl71GclsL3uDA5hqdlD21GEaOhsJym
      aTS3dmA2GWlptQAb22NHDCCXimOvasAQj4NauPtS5AyTE1NE41F8Ph86owWr1Vqw0kPLMyys
      OKnzOnF7q0pO5hIZhRqvB6fNTCqTw2nOX5Ervnki4TBpQY9ZJ1Lb2IJBn7/HEIVVN5G+vj3I
      iorLYSuqQyYWwdPQTDaTQ80UXjaVsykmJ2eIhIP4jDr0Zhs2S+GJon9+Ar+lhiqXDW91Nboi
      BqCpMnqLC5eYQRJX39P5pVUmR0cJR1fbQ5T0WGz2gt6/mZifyXk/rQ3VOFzugnOFNcKxNC31
      1egdThKRGLjz318ksMRKOEomkiNpM+GtacBkzN92giAwcOkzevoOkMnJeN0b92Pu6kbYGpqm
      kk6lWF5axGSvorbKVUBOQ1VzhMMJXC4H0XAEp8dTsMITsSipTBZBEHC43GRSybwbYWvIuSyx
      SJDlUJKuzvaCiX1VVSUcCuFwuUDNEkuouF35J12KnCMcjqAhYDCZcNisJesilUyy5FvE5qmj
      2p1/eKVpGnIuTTwp47BbCIcjeDyeAsMVjXg0QjorIwgCTrcHXREfdU3TyGZS+JeWwGijsa66
      gAGsphYPh6O4XE7i4TBWj7fgMCidjBNPphEEAZvdiYCadyNsDVmWScbCLCwF6ejuxlDAYjRV
      JRoOYXK40AkKkWgaj9tRQFYhFAqhaqDTG3E57RvaY0d6ADkdY2hkClXTsKZyBQ1AEGB+eozB
      kQWaW+qJJdIc9xReKYmE/CwHY0SCQQ6ceBhDCT0mx0aIBoJY65sJxjNUO/IvQ6bjYc6f/4TG
      5haUbBJnTWdBA1Bzaebn51A1jYyi48SxA0V1yMaDDE8sggbpzBzV7r155QRBY3p0iElfnIY6
      L7FUjhNF6iIUWCYQSRJYCXDyi4+iMxRZEdNkrgwMklXBZUuj1VYXMCyB5YVpLg2M09zSSDQc
      4+ipwgYQj4SYWwqQjgap73uQekfxFpmfGiMSiWB0epj3hWhvzH9/uUyCC7/5BEd9C3oti8FW
      U9AAVFVmcX6OnAqxlMzpUw9s+P/OuG5qqx81SMUi6A2Fx/8Aze09WB11WG1WjEZD0Qmau6oW
      i8NL2KQjnclhKGEBmqqCphIIRairbyooZ7a7OX78Qex2O4hS3m8DrCEZTLS2tqEBk5MzxRW4
      hqpppCIh9NUNRaQE2nv34W3IYLYYMRqK14W3ph67W8EqqKQVFSvFl4RVTSWbSpEymooOHeua
      2jGY3dhsFvRGY9HgJ7vbS5vZTi7lJBSNg6P4Mq+mqWgarKwEaOssPMnXm2wcfeBBDDYHoiCg
      LzInE0Udza1tqBqMj0/d8v8dMQC92cGBvT3EEkkcLncRSQGQmJsexWx3k0jLHD7QV7DhM+n0
      6tq3zUOty0IqWXhMDdC1Z9+qi4NowGkubC2CIJBLRhhZ8kMuQXXLXmoLjE81VSGeSKAqMh3d
      3UWvD2C0ednfYyaeSOEs8kYHAVEQmRofwepwkMrBwb7ewnWRSpHM5DBVNeAu4aIuCDoOHjxI
      LBbHYncWNSxBEFhamCJgthONJjhy9HDBsX0ukyGRTCLLOtpba9CU4nsiLZ17SMSi5FQBt6vw
      SpsgCKCmGRr2YRJzWL0ttNTnrztN00jEEyiqQmtn5y3/35Fl0Ex8hbmVKFMTYwxcGS4hraIK
      Rjo62hGVbNGdR9/SMkoqyuLCPKFE8XVygKtXrxJdWWJkeIhgovhuYiyepKmljab6KmKxwoaV
      jQXICgYWF31MTk6V1CEVnGcxnGJiYpzBoZGisqqSQzRa6WhvR80Vv78lf4BcIszczDTxbPH9
      WlXNMjE1z9z0BAMDgyVcITSyikB7eztmUSVXRHZ+YRGTKONbWmRhubRbyOjIMJlkhNGxEWaX
      QkVlk/E41Q3NtDQ3kIgX3uNQcyliGRW/b4GpPO2xIwYg6YwEF6eoauzEUmD2voaASFdHE1ev
      jtHW3Vt0JcEgqixGc7TVexGLL2YDoBdVFqMybXVeRKF4VXT09BLyTRNK6+hoLrx3IRlMLM2M
      09Deg6nETvSqvJmlmTEaO3owFunKASS9mbYGL1fHJujqKfz2B5C0HIEUNNV4bvkq0c0IgkQq
      uoTJ3YDDWnwIBCK93R2MXb1KbXs3piLnthh1jM+u0NPeiCCWrguLUWJiLrAqLxSXr23pQov7
      WQik6O5sLigniDrigTnsNS3Y8vTyO7AKpBBcCRIIBFEBs81FS2PxecB2KeQODau+9KlElHAs
      CQg0t3dgKeEPtF0K1YWq5AiHwqwEgmiA1emhqa74Zlj5UQmHIwSWl5E10JmsdLQ0ldgM2x6F
      3KFh1WkvmU4RvOZAWN/UisNawjdqm9zYHjtgABqqqqGp6up6s5Dnw3nb5OrwIB09e9eX/IoZ
      gKat6rAWw1zIrXerpKPLzEdFOpuu9xKF6kLTtHVffwBBFJHK8qkpjeGhIbr37EUqeU83t4eA
      KEplMYCxkSGau3oxXmvfYgZwc12IkrSpXrwUcjbB+MwKPV2t6z3bji6DZpMxhgYHiWRFvE4L
      saTMyeOHy3Juoyhz7oOPqPG4aevsKiKpMTc1ztWJaerq6ogEV+g9cgqvrdTCaWkkg4XJwfdJ
      RZpxuKtoaSi8s5uOhxm+MkBctOGx6klmNI4fLb5sull0aooPPvwNXpedjp4eTLr8hiVn04xe
      vcqiP0xtTRWhSJIvnDpeFh2cNgNn/+EcDXXVNLS0YzEUNu7l+WkGRsapq6sjHQ9S1XaI1tr8
      S5tbQRR1+KZGSKfj2OwuOlsbN/z/rhuAweJg755uBqeDdHc2cWV4rGznbu7sw1EVRQP0OpHC
      XssCze1dxGIxmto6senyf/d3O+hNNh566CHS2Rx6Y/Eu3Gx3s6e3k1G/TFeLl6GR0rERm0Og
      vfcg3mgMDaHoJpjOYKZ3715SmUG6uroYvDJUZCd4a1Q1tPOAxY2qrYa+ohWejNc2tRGNRvE0
      tUHCQiRXOn5gM4g6Iyce+gLJdAZJtyvmAAAakaCfpUCMpuZmLKbbf/MCDF6+QCiWwmEx0Nhz
      EIOWLboTrOQyzMzMYrS5qK/xlmUIlAot0D+2gKQ3IggiRw/tK1kXQb+PQCRFc0tLybiEzaEx
      cPEC0UQas15H95Fj2IpOyDUS0RDzvgB1jU04rMUdAzfL6GA/oXAUm8OKraaTOpex6E6wpsjM
      zk6DzkpTY215hkDpGJeHrpJJKehMRo4fPbTzO8Eg4PTU4PQUHh5sB6PVToPJSCiaWA3wLzGc
      lvRG2osOlbaOKIrUNDazMj+LZMq/W7wRAU91PZ4yz33Ndgcmo55QJIlSMjhIwOrw0FNio2qr
      SEYzrc0W5lciWOQclIgHECQdLW23rtXfDoIg4q6qJ7Q4g5rHoHbEALLxIHPhHOGFSQSzkyMH
      8m//bx6NaDiMw+EENIx2D06LkWy6uDfo6MgINqPAxGKIvoNHcFtvryeSs2miWQmrHkzNjRjN
      hTdz1kiHF/GlDPhnRjHaPRzs6yn5m+JoREKh1brQHFhdKtYSy7GqkmVsco5MLEBaM/LAkYO3
      PQlOxCLYHatv2bpaC54qB5SIHxu7OoLXZWVofIbWrv00Vt/eHECRs4RiSWwmPZaWNiTDrT3b
      juwDCILA8tw4jtpW9EJ5RmCapqKqKqqqbXolRZVTTC7H6az3FA1y2bwO2jUd1GvZ80r/RhAk
      5idHqGnpQtTKk1ZyvS407ZYMHAW0IOKfR7RWYTFImwo7La3D9bpYTW5Q+qwSCsMTC/R2NpPL
      3X57AOs6IAh522NnDEBvxG61kYz4kYzFYz83eUacbi9KJs7i4iKjI8Mks6UntQ67A5tJx0Ig
      Vpaxt95oxuOwsORbZHFxgYmp4hFeAKLBjMNuI+Kfx7CJHqM0Ai6Pl2wywuLiIiPDw2RLBMUL
      goDd7kRJx1BEfVkmwDaHC0nNsri4yNToMMFE6Umt3eHAajExM7uM3V58uLQZJJ0Br8fFytLi
      6nORxxdoh9yhtWtvBI2hoRH27esryzUVRUZVNUIL08j2ehwGregkeG3N2T87iehuLOgNuhU0
      TUW+FqI3PDTCgYP7d6AuNBRZQdU0liZGMbd04y0Q63CzDsNDw+zp21eWDN+qoqCoKrlkgLkA
      tDV5ik+CrznDpSI+lhJGOpqKR4VtBk3TUGQZDRgaGubgwQM7PwlWcmnGxydRru08louFmSlS
      skYuJ9PVYCaXKT4H8C/OEogkyGVzdNaVpyrkdJzh8TlMRh0Ob+mZrZxJMj45jaqB0XL7695r
      zE1PkFEFMopIXYmAfzSFiatXyaqgScay9AAA/sU5wqksWi5LfXsPReMygZDfh28ljKrkqGu5
      3bnQKpqSZWRkFIPRgNV5q+PljgyBdHojZqMeRVWpri4eE7wVookU3V3d1DtNBGKpkvJ2hwNV
      VTHbXViK+ctvgUw0gL2mme7ubmIhf0l5vdGMUSeiqCpVNeWri1gqQ3dXN1UGiJRIWS8IEjar
      GUVV8VZVlc0NYiUcpburm47WWpYWAyXl7Q4Hmqoi6q247OVxg1CyKXRmJ93d3aRiuyQvUDrq
      Jy3Z2b+vj/mpcm3+QI3XyeX+y8wEklQ5Sq9lT07NsrdvHy5dFn+0tMFsBmtVA9GFcS5fuoyz
      qr6kfMI/i2qrY/++PmYnyrUpKFDltNHff5mllIarRA+gKhlWoln279vHysJsycRYm6W5vprL
      ly8xNDpPQ2Pp3nBsbJKevn201VmZni2eGGuz6Ex21FSQ/sv9mB23Dql2xAAMVhfJ4AID/QOY
      7PmjwbZDVhFpb6gim8shb2JVx+2wMDDQz2wggbNAnp+tomTTVDe1oxchky5tVGZ3NeGFCfr7
      +7E6b3/Mu4qGIuhpqnWTzWZLJ8aSDAhygoGBfgRj4ZjrrZJIy/R0tJCTc2SypZOJVXudXOnv
      Z2RiAW91eZ4LTZVxVDVgNohkM7skMZaqKEiiiKIqJJPFx+lbIRRcYTGr0lHvIZLIYC+ZdE5A
      U1Vy6RQ5RcNUOkldSTLxCH5/Ar3FSyYRAQpHmgHIsoJeJ6KqKslkeXohgGBghYys0uSyEs8q
      eMxF3nXa6rKtoqhkytoeAYIBP+0dzQRXItgbiwU/AQigqeQyGbI5Gbj9BlFyaYIrSyiaDr1y
      673tkCvEda4MXGHf/n1luWY2nSCR0TDpwGC2kkomiq4CrbEyN4Fsq6POVY4lWY0Vvx+3t4pU
      Ko3NatmRusgko6RVPTpBwWKxbtrNY+jKFXrLtQokZwhEUjgtOjBYQckVXQVa1z22zGwAutrK
      4SmgEVzxY3dXkUmlsN2UpGBnguKzqfVVIKurXN0+LMzNMDW3hFEnsffoyZI3tzQ/TSCSQNUE
      umrLMwSSkxHGx8eRRycwWZ0cO1R8lzuXTqyvAtnL5hqiMTc7y+yiH0mUOHbqC1j0xdOijF9b
      BdJbiqRQ3CK++TnGp2bR63U07zlCta34Gz24vIBvJYymqTS3l2cVSJUzzMxMERkYxmhzcvKB
      Qxv+vyMGIIoiiqKgCeKmdgg3SyJ9Lc+P3UIqky09BNI0VE1DANQyzfwy8TCe+may6SxqtvRw
      QpQEZFlBEMWi3pJbJZ3TqPa6ser1pGQFS5GkXwgiqqqgaSJaGXUIxVK0NFSjtztJROJgKzUE
      4lp7COt7NLeLkk1jdtUgiFGEPN3azvgCJSIYXXV0NpXXA8zrdmKwWAlH4rS6LKSK5OcHCEQS
      7OvrK4sX6BoGuxdjNo7VKmFuKO3YlQ6vYKtto62mHLvA13G7HJgsFiLxDJ4SQfGakkURzezb
      U17HwNoqD4LBTDQcpq2tEU0uPhFeWgnR19dXFi/QNSSDGZMUw1XrRTTeWsc7sw9gthHxzTA4
      OMjUXPGEqVvBU+UlFg7hX5wjsomtd6tBYGBwiMHBYZIlsjhvFp3JitUgEIlEmZounRbFYHcT
      mLnK4OAgswvFE8JuHgGv10skFMI3O1UyKF4QdWQSYQYHBxmbnNlUzv/N4PZ6ScbChALLLK1E
      S8tbjfRfGWJwcIhIiSQFm0WQDLjsZsLhMBNT07f8f2eC4iU9JqOOnCYiqpvLtb8ZAkuLhGMJ
      apvaN+XZabXZSQYDmB2OsjW6nEkyv+hDQUdvd0dJeUlnwGiQUEU9mlyeIBDQWPbNE02kaGzv
      xlYkEgsAQcJqMZHIKBhL5S/cAuGAn0A4it1bT8MmPDstNju5eASz1UyuTJ+b1pQsc3NzZBXY
      03NrD7czG2GxAKK9Gj0q0UjpdBmbxe2tQieKyEUSsN7Ioj9IS62HbDpFtES68c2iM1pw2a1o
      mroJP3xIBhYxVTUjKjLRyOY+erEZvN4qpE3WhaZkSCk6rAaRaCRSFm9QAKfHi0EnFU2IeyMz
      8z462xpQFJnQJr6usxkEyXAtH6iW98s+O5QevRaTHCWRTFDT2FK2845PTNPbtw+7mGYpUnpN
      vaO1icVInJwqUuMoxxIopALzZIxe9u/bw+T/3925NiWORGH4SQJE7nhjh/GyOrWrDv7/PyIo
      io6II4qCEAgBcz37wamprVJBymTZ8vmaLnKqm67qPufNe87rM8dnitsoZpvx2KK0vRtKDACX
      VzeUDw+JTfoY9nRlrKrprGbjWNaYQrEUSgoU4Lx+zl8Hh2ytL3F5Pbuy5ivOjQAAA2NJREFU
      u/f3N5qtDiPLZWcrnIyY92TSm/CsOmhevni+sDToaOyQzuZJzvAFmod8JslxtYLrepRLOoEz
      fRMMBgbxpTSFbHiCPD23zLByRuUxRio3W9vjPlmMbZ90Lh/S55DPZFMJqpUqtuPzZVoGCBDx
      GQ4tUpkMqaSOCKHogdZW8pxUK4jn8Of+7I/9h4aBmtDJFfK/MmIf12fFEklcq0e1YhJb+r9c
      gvUkG6Uivm1R//HyYjI/wk3jgruuQUzTUN55/CiWNkjqMa4v6phPH7+LPJl9Tmp1RI2haRqu
      O/s348kMpeIq7mTIeePnh2MAofnjnIe+iaapKOIxq6efompsbn0F3+G0Ho4e6b7V5Kr1QDym
      oSD472gsuFoskU0muL9p8Dj8eEXafbKo1Wo4gYKqqXivZaEkIgzDePOZ+2TJ9c2d+L4f6jur
      R0fiByKPNw257Y3ENE1xXffN8e3WtYzGtgRBEFoMw3ZDGvdDEQmkWq2KyPS5sMdD+Xn7IL4f
      XgwigVSOjiQIRG4vTuVx7Ewf7bvSvLoW14tmPexRR+qXbbFtWyzLenN8t90SwxyHuh621ZfT
      i6a8tR4Ll0KE+s5um+ZdF0XR2P++jzOjP0AUSOBxdlrDDxQKxa9sFFcWMhe9+xatTh/UOOWD
      vTd7H0TJxOxRb7RQgW8HZeL475JChIlIQOP8jLHjkymssbP5ZXGNsqPGcV00VUFVBNcLr6I5
      DxJ4BIECioL3jiNQRFHgeh6qoqBKgBuWvnlOHMclpqmomorrhJXinRMJ8H91jH8tI7YgW5Ro
      6PQGlMuHvyu7owX8/yb9B5Lr2+yG4Gr2EbrGiHLIVe55abU7fC8f/q7sOgvYBJ5tEcRzHB68
      bqD7qTZAKv5c2dUUdYY1YnQksst0j86YPKbIFKZbI0aJrvgc12qoqFOtEaNkJZ3g6LhGQlVm
      WiNGhRZfYtQ748Q20dP5F9aIn+oIlCssMzF6pAv/7Xn738TiS6STcUTTUYOQyplzo5BfXmY8
      GJDKvt3ELmoyhRW88ZB0JoUviwlC0WLkMmmcQEF/Jav6qTZAq91h548VHNvGCElLMi9Wt4W+
      vo3quwyM3kJiAOGu02djLY9tjRi+wyImChrXLfZ2N/El4LGzmLnwJiZeLIOuCgPjZdONfwCb
      sEmhizs+zAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Base_Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='RAFT' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29WXBc15nn+btL7pnIBBJLYt8BEgvBTTupfbEslUWpFJKry+V2l6s87ZqY
      mOmYiY6et5qY6op5mIh56ZmKrqmaclRVt2W7JFu2ZEptrSZFilqIjdi3xL5lAsh9vffOA4gk
      QTITIEQQIHl/EQwCeT+c/O4997vnO+f87zmCpmkaOjr3KOJeO6Cjs5fclgAIh8O342t07kBW
      V1f39PtvSwAoinI7vkZnl1mauMT/85N/QQM+efdnnO0avc4mNNXFWx93Zn6Pr87x87ffxzfv
      5R/+8WekrrLVlBhnzn0JQCoa4D//p/+Tv/qrv+a3n351/ZcrKT757Pymj8Kri/zk//snwsmd
      31/yjv9S554jsraId3SUpUiC8QkvbmM17715nu7ReV58/QcMn/0lo94pKh/4Dj//h79hwp/i
      B398ikQqRSiSIOz3oV5V3uxQL+VN7QAYrE7+7N/+a37yk8/49iNt/OPf/w2Cq5oKc5jPu8d4
      /Qd/xrLPz/n/9ku+Gp7D7K7g2w+3kQgHSagqdqQdnZPeB9C5KY4cOchnv/0VBbUdaEqa6bUk
      /+OPv89X597DH8vnR997GSUwz4g/TXOZhdHZNQBqG5rJsxo3lTUwuUxLbcn1X6KprCZE/tXL
      z2G0FXCo0cPw+DwrK6tE4wle+d6foYaXKa+ux+20faPz0QNAZ9sIgkhhZRO9XT0ca69FNhjI
      E6L8X//p72hsf4TE6iD/+C/vY3SW4JZiTCxFyLcbkUWJT3/7C859+QX/5WfvogKapmEqPYBF
      vvoWFJBkERAoKi5GIs3FC58zND6NIAhIsoQkSYiCgCTJdJ59n0/OneeffvJzkjs9p9sxDBoI
      BHA6nduyVRQFSdpZc3arUBQFURQRBGHP/dgP12I3fFATAWYmZ6hqar3lZd8Mt60F0DSNeCxK
      NBZH0yASDhGORLk2/G5mxEhTFVLpzR2gVOpKN0tV0oTDYVT1ypfEY1GSqXTm93QiysjoBFeX
      Eo1GUVWVeCxKKBxGUTXWAms3/A6AVDKOomok4zFCodAmn661vZp0OvsxWL8WipJm4xm1Fgjk
      tN8RmspaIJjTh1tFOpVGY70O4oqBkuoGrn7+qukUict1k0omSCnqdWUkoiFiSYVIOEQkEkPT
      FAJrG/5rpFJpNFUlEg6TumrwJZVMEInGMt+XuFxX0l/+5V/+5S07wywkEgnWlmaY9YVIxMLY
      HE66vv4cTUniD6dxuxybbM1mE/MzU4TjKnaLkenJSUy2PBKxMItzc2iAbzVEnlliJZJCS8WY
      m1vA6shjbW0Fm209L5yeHCccjTA158NT7Cbin6V/YpGZ6WnKK8oQNJUL584gWfMpLsxn43mf
      TCYxGAz0dHcioDE5u0Q0tEosEsVi3/wdmpLk/Ie/Qc1vYHakB02QGBodp7K8DIAV/wqSKLC6
      skw0qWGWweudxGgy8fFHH2K05GGQBIKra5jstk1PpEQiwdzMJNY8N7IkMDYxgctuYWJyBnue
      k1gkyNz8AmhpVkMxbGYDk94JRKMVk3F9fCOw6mdhaQU1FSWS0rAYJaYmp7Da80BJ4J2YYGEl
      iM1sQkIhrooYJHGTD2az+ZbcByPdPQimNCNeH8lolFDEj9FWgPFyGrQ83s/FST+1ZUV0nX2P
      FaGQPDnJgi9Int1GeM3H0PAgsr2Qod6vUVIxVmMpfLPzRJNpXC47K/4A4YCftVCYsYlpyss8
      qEqaiYlxAv4lgimZ/Dwr4cAagWDw9rUAC/4QTTWlRCNhFA0MRhMWixlNvT7K5yaGSRvz8M3P
      Mj7Uj9lZwGB/PyNDA7jceVzqG2NtaYF0OsrSWpT+S724nWZGpxbw+XzEomHWgmEqq2tREzHy
      XOvp1/z8Cs0tzZRZZZZCEVaDYfKLPNRVl3OjZEeSDVitVkAjEgpRUOBgdGIGn89H/PJ3TI2P
      UllbD4CSThEMrGE0W4mEAoTCUXzLPpZnvIQUA/Mzk0yNDSFZHCCIFBcXU+4ppL/nKwLx9LYq
      I5VKYzGJ9PYPMjAwgMsqMTjlZ3VhlmQqhcFk4dKlXsKhAKFIjMGhIcypZWYjMnNTkwz3XcLu
      cjEwMMRA/wAlpWVIosDS7ASdl0YwyLt7SxisDlLRALLFmhmCVNMpfH4/iiZiN8uEI2EM5jxE
      LUXfoBc5ucrU/DzjMz5K3Pnr5Zgu3z+aRigSw66uMb2WxOfzU1JeiVlSsdgdhAKrxJIKdbW1
      xOMJnI71B5fLXYRd2t41vyXIqKQlCwVWCMYVNE3FZHfTVFuBqqpompppnmKJNO58J7IkEQ6H
      mJuZxmixYbLacTjsuPNdmA0GNhpPhysfh82Kpq0Hk6aulzV0qRtrYSV1FSWoqorVLBGJpYgq
      GmZRQ1U1JElCluX1QNQ01KuaZE3TQDTQ3tKM3enCYbchXD6uaRqqmmJ23sfiwjxzc/NYHPm0
      tbWjJaOoV5clGCh052OQJSrrmtCiq0zNLyPJMpIkYXMVUV9dBpp2udzs3bLJSS+ibAYtjdXh
      xG61UJCfj9Egszg1RVwTEEUhcw0cThc2ixlXfj4GSSIcCTM7M4vZagXRgNVsQhQFrFYTsaSC
      LICqaZvq4xtz+bxSaBiNDu5/4Dgp3ySriYzB+jlrUFaSz6WeforKy9dbtlU//mAcQYljtedj
      NBoydWxxFtNQ5aHA7cZhN5NOr9f/zNgQYay0NdWu31tqms7OTupaOnA7zJn7zbsQuH0pUHmZ
      h6HBQeKqTHlpMSaTmeKiQgQBJiYmIBEgITsRlCSFbhcjw6P4VoN0HGphdS2AzeEkz27Dbreh
      qWCxWrDYrAiCAYvJgN1mQxMkrGYj+fluLGYTiwtzxGJRUpqEf3mRqtpapkaGMDoLKSsuxHq5
      BbLYbEx6veQ7zEzMrmCzGDEYDMiygZLiYkRRQNVU7DYbKgJWiwlXfgEWs4XK6mrcLgfOQg9a
      bJXZhSVszgJKPSWYTUZUTcVqs2KyWJAANZXAvxaiyFOKwwgLqxFceXbsNjvL01NgMTM7M09+
      vpNEIoEsqExNzyDIFqwmGZvZyMpaiDyXC6fdtp6KSQYsJhmH087ykg+LzUFFeRkmowFVU7FZ
      rYgmG0ZJo7y0hNVAEHuei3ybjHdmHrvDiSgZqfU4iaRUFpZWiAT8WOxO0qnkLUmBpsZHEGxO
      XEaBwaFRNLOT8nwLU1MzCEYrJYUFCJqGJb+YZCxCpacQDA7cNolESqW4rJrIyixrkSRFxSXY
      rRaKCt0IgoamClitZgSDFbMsEI2GicdjhGMpSj0lSILC0qKfSDiEweJgYW4Gp8OCYLBdGQVa
      73DtzoxtNBq9nEpsz1YWBZANBFbXKCoq3BWfchGLxTCZTIji3o4S38x1u5t92E0yM8F2u31X
      v2i7w6BX2xa53bvlTk5EUcRqte75ECTc3HW7m33YLfSJMJ17Gj0AdO5p9ADQuafRA0DnnkYP
      AJ17Gj0AdO5p9uSFmPn5eb744gsEQeCBBx6gpOQGmnAdndvAbW8BVFXl/PnzvPjii3z729/m
      3LlzqDfQA+no3A5uewsgCAJ2u51f/epXCIJAXl7enuvude5ddtQCTI4O0NX5NYsrEQDU+Bqf
      ff4VAyPjpGMBzn/xJYMj49xI0yUIAseOHcPpdJKXl8fRo0f1ANDZM3bUAqyE4xw5fITO7l5K
      CjoIr62gIOLMcxINrZFKgyPPiYCGpm0oJy8rNTWNjz/+mGeeeQaADz74gFOnTmWC4GrbvULL
      qDL33g/dh91lRwEgCAIIAlwWJOd56jhZotH75VfkHz/OyaIq+rov4nQ5sRrEzA21gdls5pNP
      PgHAYrEAZI5fa7sXbPiwX/y4133YTXYUAHajSFfn1xSXNzE2OkZRgYPJuSVikoHU2jKjc0vE
      FQmzQUIUBURR3CQse/TRR7l48WImHbr62LW2e4EoivvGD92H3WVHAdBw8NCVX4rzAGgvKM58
      dPXP16KqKu+//z4nT55E0zTef/99XnnlFb0foLMn7MkokMlkYnBwEACj0bjFX+jo7B57MhP8
      7LPP0tLSAsBjjz2W8+kfj8cJh8OEw2E+/PDDnKss6OjcLLe9BVBVlbNnz2IymbDb7Zw+fZrX
      XnstaxD89Kc/JS8vD0mSGB0d5eTJk7fZY527mT1Jgebm5ojFYvzwhz9kYWEhp/2pU6cwm81Y
      LBYmJibu6g6Zzu3ntgeAKIp8//vfJ51OI0kSTU1NOe3n5+cpKyvjjTfeoKSkhJqamtvjqM49
      wZ6pQWV5Pfa2GmMeHx+nq6uL1157DVmW9aXWdW4pt70F0DSNzz77jKWlJQBKS0tz2ldWVjIx
      MYHZbMblcukpkM4tZU8CYGVlhZdffhmA3/zmN2ialrUTbLFYOHnyJG+88QaFhbd/iRSdu5sd
      BcBg70XiaRVXSS01ZW6U8BK/7/LiKSmkpiSPniEvgiBx7NhhpGtubFEUaW5u5q233kIQBNrb
      23OuvzM8PIzL5eIP/uAPOHPmDIqiZNInHZ1vyo7upJgicOTIMTq7uqkpcxONJbCYjQiCyOLC
      PI0tHaxODRFOpLEbRFRVZSUYZXrp8iq+kpOGjkcAiALdo+sjQS3VhaiqSjp9ZfXm1tZWfv/7
      33Pp0iUOHVqfgb76+G6gqiqKouy5Bubaa3Gv+rCb7PxRqqls9KFt7nIeKKxgsKuLlMNIWlFR
      NBVJEDO6mv5pP//Hf/ksZ5Fv/u+v3VB7cvjwYaan1zdJuB3r9m/4sNEyjY2NcfbsWRobGzly
      5AiXLl3ivvvu+8bfEw6H+cUvfoHb7eaFF17g3Llzm+Y59oMOZz/4sJvsKACKXQ66unuorj/I
      2OgYJYV5eGcWUY1WGisr6RsYQLY4sBklrtyr279pr77B+/r6iEaj2Gw2TCYTgiDcNt3Qxvcs
      LS3x0ksv0dXVxdDQEIlE4pb4EIlE6OjowOFw8Omnn5JOp68rdz9opPaDD7vFjgKgvKaB8ss/
      FzjWlwZvcxVljnccPvyNHdvgxRdfZHJyknfeeYf77rtvTyrj6NGjLC4u8vjjj3PmzBkqKytv
      SbnFxcWEQiEaGhpIp9P6drJ7wB3Rm6yurubHP/4xZ86cwe123/YmORwOc+7cOXp6eohEIhw9
      ejSr7dzcHKIocubMGTRN4/jx49TV1d3QNp1O09PTw8DAAPF4nOPHj+/WKehkYd8HgKZpzMzM
      kEgkOHny5J6s2Dw4OMjTTz9NUVER09PTDA4OZr1Zg8Eg6XQal8vF4cOHGRwczBoAfr+f8vJy
      HnzwQRKJBB9++GFWW53dYd8HwDvvvENxcTFWq5U33niD7373u7c9CB544AHee+89YH0G+7nn
      nstq29zczBdffIHX6yWZTPLss89mtfV4PIyOjvL222+jqmrmNVGd28e+XxhLURScTif5+fl7
      JoPw+/2Ew2FEUWRpaYm1tbWstpFIhImJCYqKilhaWmJ+fj6rbTKZZGFhAaPRSDgcxuv17oL3
      OrnY9wHwne98h1Qqxfz8PK+//vqepUAvvfQSfr+fl19+mYGBgay2IyMjPProo4TDYb773e8y
      Pj6e1XZ5eZkDBw4QCAR49dVXmZub2w33dXKwL1OgxdUwb3xw6brPz3kvZn7+188fxmW/NbsX
      bsXBgweJRCK8/vrrzM7O0tjYmNW2tbWV06dPU11dza9+9SuefvrprLZFRUXEYjFefvll0uk0
      Ho9nN9zXycG+DIBQNMlHnd6cNq892XrbAkDTNLq7u1FVleHhYf7oj/4oq63RaOSll14C1kd5
      Ojs7KSoquqGtqqpMTU0xOTlJf38/L7744q74r5OdHQVAeM3H1LyfhsbGzB6v6WSMqXkfteXF
      9A+NIBmtNDXUId4FcyjJZBKfz8cDDzxAMpnMuWXQ1NQUb7zxBuXl5SiKgsvlymqrqirLy8u0
      trYSDoepqKjYDfd1crCjABga9dLe1kT/wAiH25sBjfHRUXyRBCV2EbOrlLqyAu6WCcSqqio8
      Hg+ffvopJpMppxivsrKSV199ldraWhRFYWRkJKutzWbj9ddf56uvviIajeoLBOwBOwoAUZYw
      mvPQlPUOXsg/j+QoxpKcxWB1kliY5PzUGMfuO44srK8spm5jBCedTqMoyrZGexRF2TWR1oYP
      V4vhRFHkiSeeYGJigrGxMaqrq2/4t+FwmOXlZZaXl+nr6+Pb3/72ln4eOXKEAwcO8Nlnn/HA
      Aw9s8mOvhWj7wYfdZGd9ACXNim8OozWf5eVlSKWJBVaZnprGU1JGSXklyfgQiqZhktdFZeI2
      Zm/lyxtHb2eid2OD691g3QcpM+OsaRpzc3MsLCxQUVFBcXFxVklGPB6ns7OThx9+GJPJhMPh
      yOqnpmkEAgHGxsYoKCjgoYce2jTKtZvnuF32gw+7yY7GFNvaWgnFoKWxCqPRSFFZFW1trTz1
      1FN4PEUkwmtUN7ZgNdwdKsJLly4xODhIaWkpnZ2djI2NZbX1eDz88Ic/ZHFxEZPJtL6RdRbW
      1tZ4//338Xg8LC8vc/bs2d1wn7W1tT2Xdu9XdhTaBpOV6sr1zZOv7hDabOt7DZdVVN0C1/YP
      RqORWCxGOBwmFottmasbDAaefvpplpaWuHTpEm1tbTe0kyQJRVEIhUJEIpFbsiM7rLcsFy5c
      IJFIADA6Osqf/umf3pKy7zbu3rbtFtLc3JyZ2X3qqafIy8vLaR+JRPB6vZSVlWW9+QHy8vJ4
      +eWXmZycpKWl5ZbulDMxMcGJEyeA9Qk3nRujB0AO/u9ffok/EL3m08XMT48fqeHRjs2d4ZmZ
      Gc6fP8+xY8c4f/48lZWVtLe3b7IJ/vY08Z7ezO8Fl/9fuvy/sbYG1+uv7dhvQRD4zne+gyAI
      WK3WW9ay3I3oAZCDSxNLzPlCWY83V7mv+0xVVQwGQ+YFnhuNaKWmp4l3dWX/YvWbaZ5UVeVX
      v/oVmqbxwgsv0N3dzVNPPfWNyrxb0QPgFlNVVYXdbmdkZISWlpYtl33ZLVwuF8888ww/+9nP
      7upXGr8pegDcIhJf/B2qf33SywIcAliB2OUHvVRxP8b2P7wtvgiCwKFDhzAYDLz66qs5J+MA
      AoEAwWCQSCSC1WqlquruGsTIhR4Atwhl+gLK1PmsxwXZDLcpANLpNG+99RaVlZU89dRTmdU0
      boSmafzud7/D5XKRTqeJRCJUVFTsiep2L9AD4C6lra2NEydO8NFHH2GxWHIuQy/LMuFwGE3T
      7rnl53cUAEuzk8wtr1LX3EqexQBAIhJgYGKeQwdqGRgYRLa6aKqr3rd6IEVR8Hq91NbWkkql
      0DTtrhkt2Vh02Gg08uyzz+ZcSEAQBJ566ilWVlbw+/04nc575ukPOwyAmSU/Rw+309k9yJHD
      7YDG6JiXVFphYWocd2UTgdlhoqkKbMb92QH7+OOPMZlMDAwM0NLSQjqd3nKl6jsFQRC4cOEC
      58+fJxaLZdYduhGapnH69OnMZoUjIyPU1tbeM0GwMzGcIIAgA+vDdUvTo8h5RSgLk8SSMgVG
      AwZJIqWoKAr7UgxnMploampiamqK06dP88QTT2TKy/iwhXxAVbXM32wlNbh6hTVti21HNU3L
      XIudnKOiKNhsNpxOJ5WVlXR3d+e8pqIoZrZC3VgVb+N3XQx3wz9S6O/rIa+glImJCQrzC4iu
      hQgEgzTUVjE62IempKkyyUiXd4ncb2K4trY2DAYD9913H3V1ddhstkx5GSHcFvmbKAqZv0lu
      aStmbIUtnq6CIGSuxU7OUZZlWlpaqK6uRtM0IpFIznJefPFFIpEIMzMzeDweDAZD5tjdLobb
      0Zm1HjpKKq1gMMioqookSThcbiorK5EkEVdBEYK4fvPvVz755BOSySTFxcU89NBDd03+v8GG
      XFvTNBYWFmhubr5hX0DTNP75n/8Zl8vF6Ogo7e3tPP/883oKlAtBFDEa1y/Q1ZMsGz/Lhv3/
      YofdbufJJ5/E5/Px3nvv8cQTT+R80+tOw+v10tnZCcCJEyeydoQFQeCVV17h97//PYWFhTz2
      2GP3zM0Pd8CqEDdDIpHg7NmzfPzxx8zMzOTMy48cOUI8HsflcvHQQw/dVTe/oih0dnZy6tQp
      XnrpJc6ePZvzWuTl5fH888/T3NysD4PeyXzwwQccOXIEm83Ghx9+yPPPP58Z3biWkZERFhYW
      WFhYwOPxcOLEiawvr99piKKI2Wzml7/8JZqmUVycfeNyTdP49a9/nVnwd2FhgVdfffWuXhD3
      au6qAHC73Xz99dfYbDbi8fimzty1RCIRnnvuOS5evEhBQQHhcPiuCQBBEHj++ee3bW82m3n4
      4YcJBAKMj49n+nX3AndVANx///1Eo1ECgQBNTU05K/H+++9HURQefPBBxsbG7ooVGVID7xD/
      6K+yHhdkM/b/7pPNnwkCDzzwAAUFBXg8nsweDPcKd1UA/PznPycajWIwGAgGg/zoRz/K2goM
      DQ0xOTnJ6uoqeXl5FBYW4nZfL2++o1BTkMy+xLqm3ng8/+rz3nh9Uk+B7kBef/11zpw5w/T0
      NI888kjOFCgQCPDCCy9w/vx5SktLCQQCd34A7JChoSH6+voQBIGGhoZ7qgXIeqbp6Cqj00to
      SpKRce+mY5qqkrysn4H1jlQqmSR9eSmRZDJJMpnaaiL1liMIAo8++igvvvgibrc754jGsWPH
      EASBJ598EqvVSnl5eVbbuxlN0xgcHOTll1/m1KlTeL3ee2ov5hu3AKkob/7Xn3BmJMj9zaUE
      xAIa62oyhy91f41oMGB0eGis9hCPBJiaXWJp2c+x9jq+Hpim3FNMTXXVTWyM9M25ePEi09PT
      wPooz5//+Z9nHd7Mz8/P/BwKhXA4HJhMptvi535CEAQqKip48803kSSJ4uLie6YDDNkCQDbz
      9LdewNUU5P72OiTD5lnStCBzpK2Dzq5uqPZgsbswMINoMKGqYDFIRGMJNE1DUdXbpgVKJpO0
      t7dTUFCA3W7PqWOJRCJ8/PHHCIKAy+Wiubn5jtcCKVuUC1d22NTSadRIBIC2mhraamoyNgm/
      HwApL+8e1QIJIlYjTMws89TxWv7mv77J//Bnf3LluAZo6cyfa5pGbWMLsYtfkbYWcOxoCSP9
      PUSTCg6zfNu0QPfffz/BYBBBEKipqcHlcmXNZy9cuMDTTz+N3W7n4sWLzM3NZeQDd4IW6Ny5
      czz88MObPtNEka2msTbKiw8OsvRXf53Ttvxv//Mt0wKNjIzgcrn23VBz1jMz5lcg+N7h//2H
      UVqPP7npWHlJAV3dfTQcaGNsdIzCfDvT88tgy8cQD9I3Mo9ktGMz3d6m9PTp0yiKwtLSEi6X
      i/Ly8qwanwMHDvDOO+9gtVpJJBK0trbeVl9vFkVR+Ou//uvMFkqRSOS6ANhvvP322/j9fkwm
      E7Ozs/zxH//xXrt0HVkDQJSM1FZXoNiLsYibU5LismqKy9aflo6G9V0ine4ra9q0OfdmNEUQ
      BL71rW/R19fH6upqRtJ7Ndrl5ryyrIzXX331+mP7dAREkiT+5E/+hOrqagRBoK+vb69d2pIn
      n3ySRCJBYWEhMzMzOVfJ2yuyBkDMN0q/38hxV4ILFzt56L7s75XuFx599FFkWebIkSOMjIzc
      sFM7829+iJZjdKjgx/8Wjh7ZTTd3zPT0NB988AF2u/2OWOYkFovxySef4Pf7OXLkyKaFf/cL
      WR93prxyXOoCF7uHePyJJ7OZ7Svsdnsm508mk3fVcF4qlSIQCPAHf/AHNDQ0cOHChb12aUu+
      +OILTp06RV1dHYqi4L/cud5PZG0BVCVOTLXxwx/9G0x3yAsRXq+Xr776KrMwVUtLy167dMuQ
      ZRlFUfj444/51re+hcPh2GuXtqSxsZHf/OY3FBUVUVFRcWelQJqiYJCSvPWLn1NW38pTD2ff
      HHq/0NvbyyuvvIIgCHzwwQdEo9F9edF3wsaSJc8++ywulyvnzjP7hcXFRWpra+no6Ni3cws5
      Hu0qorWY7333ztm36vDhw7z55psYjUYcDgdWq3WvXbplKIpCQUEBXV1drKys8Pjjj+eUOe8H
      4vE4JSUlvPXWW3g8Hh555JF9J7PIGgACEitTffzt3y9R09zBcydvvDP6XqOpadSVCQDKLPDK
      E4czx1T/KACisxzBcGcHgyAIuN1u7rvvPlRVxev17vsAsNvtNDU10dzczOzsLIlEIuv7GXtF
      1gCQHUU8/sh9jM6u0t7SfDt9uim0eJDoP72c08by6t8jV+6/EYibwWg0srq6yoULFzJS7r3g
      7NmzjI2N8eKLL+L1emlvb8+6X0JVVRW/+MUv+Pa3v40kSaRSqX0XAFnbo7hvnE/7fDz/2DF+
      9ubbm46tLM3R09NLJLleCYlIkP6+PgZHvahKiqGBPsan5tD3JLl1pFIpBEFA0zQGBgZybsC9
      mwSDQb73ve9x+vRpfD5fTglIb28vL7zwAu+88w5LS0uEw9ml2ntF1gAwOj1YotP89K13aGnZ
      vMmDd2ae1pZGhgcGATCYbTQfOEBkdZnZqTHsxdUkAkvEU1trU3S2h8FgQBRF7r//fqampvZs
      04vm5mZisRgvvPACc3NzOXP60tJSYrEYJ0+e5He/+92+7AjfOAVKhvnV787zF//ufyYVDfDu
      pxc3HRYlCUk2gZbK/D4x0o/BYCaaTFNkNhGT1xfGMoq7u0ukti1bFTZEYFvYqqqCuk/FcI89
      9hiqqvLkk08yOjp6nUjtZsRwirK1raKkUTRt0/f09fUxMDCAz+fDYDBkfL0RV++O89JLL2Gz
      2fadsC6LGtTATN9FeupqCM70EYzZNx12mCS6Or+mpKL5shbIRiShkkylqWuoZXCgB9Fgps4k
      IQq7uzCWug1jSbpKiEbuIBBFCWGfiuHm5+cZHh7GaDRy9OjR60RqNyOGS0tbj8ZIkoykqZu+
      56GHHuLMmTOUl5dTW1ubc7+0dDrN119/TTwep7a2FpvNtu/eNLtxAIgmfvQXP7gbTcoAAB41
      SURBVOLC519gzK/lj57cvMVP/YGrfi9an5Bxuj2Zj44fP3brPb3HSafTfPrppzz33HNEo1E+
      +OCDrOt97iZFRUW8/PLLnDlzBrvdntP2o48+orGxkfz8fM6cOYPD4dj0HsZ+IOsokMWez+NP
      P3c7fdHJwcb6nd3d3cRisS036tst3nvvPeLxOAsLC4yMjPCDH/wga25fUFDApUuXcDqdhEKh
      fbn63tYah3ScT7/o4bGH778N7uhkQxRFXn/9dUKhELIs79kMd1tbG19++SWtra2Ulpbm7Nge
      P36cSCRCMpnk4Ycf3pdrjGb1SEmE+fLrHlQ0tJSCPxjFnXdnTybdibz3xSjvXRjNerwk38b/
      +r2Tt82fiooKysrK+Oijj274uqmmpIj+9I82fWYEEpf/AZge+/fIlfvjgZo1AJKhRc52jvD8
      w8385vyXfH6xl//w7/772+mbDrAWijMxv5b1eDJ9eyfEPvroI6ampnjmmWcYGxsjLy/vGtm5
      hro8mLMMLZF9583bTdahAIO9EALTfPz7c1Q2tFLs2v/qQ53dJx6P8/3vf59PP/0Un8+31+58
      Y7KrQdMpDj30GMePHqXAeXcoKnW+Oe3t7cRiMU6dOsW77767Lye3bobsWiCriwNVhbz9078j
      nlfPj//VnaMK1dk9KisrMz+XlJTksLwzyBoA6bCfD898QVFNC/fdtz86LDp7TygUyiy3fvDg
      wX05snMzZO0DSDY3zz11klTIz9e9mzs1Az1f09X5FROz6zlgNLhCb+8lzp79nEhwmU/Pfs7g
      yDiqroa76/joo484efIkTz/9NJ2dnbdM2hCPx/nyyy85d+4cq6urt6RMWJfM9Pb28tlnnzE9
      PX2dZOXGAZAI8B//6j9ysd9Lz+gU33pscwsQV0UOHznG2vIMANa8Ag421yGKAulUCrPJiKat
      iw42NlzbLS3Q9mzXdTjpdHpbWqCbXRgrnU5vWwuUTqdvSgt0o5UtNhuTKXe7WqD1srepBbp8
      nTf+ud1u3n33XX7729+STCYzvmbK3cao1NXXYuPf6dOnKSgooKamhtOnT5NIJK6z2cm/s2fP
      kk6naWxspKenh5mZmU3Hb9x+Ge288p1v0XVpiPDaChe6B3no8MFrLrzKRvykogG+6h3h2H33
      YRA17j9exkh/N5HE7i+MdbdrgbZ8g0q4ou+5HVqgEydO5PwbTdg6sK6+FhvY7Xa8Xi8WiwVJ
      kjLq129Kfn4+k5OTpFIpQqEQdrt903dnWRlOovXIA7QeeYDXUwkC4fimwyX5eXR191DT0MLY
      6Bh5ZgGDycjo8AgV5W6mZxZAtNz2hbF0dofFlTD/4W8/zGnzlz94jGrPzt9TfvzxxwkEApw/
      f56HHnoo582vaRqaphGLxQiHwxQXF2cV2bW0tFBTU8PFixc5cODAde9Sb9mDkQ0m3Pmb19cp
      q67n8rpY5F9eGKvoqv0lnK7CrYrVuYNQVI2VYCynTXobKVUufve731FcXExtbS0XLlygrKws
      awf7zTffJBwOI8syfr+fH//4x1lVqZ9++int7e0Eg0EkSWJ6epqqqqrM8f31hrLOPYvVaqW/
      vz+zPHuu+YVTp05RU1OD0WjkxIkTOSXZZWVlnDt3Dr/fz8zMzHUiwjt7DEvnruHEiRNMTEzg
      8/k4evRozvcGZFnm8ccfZ3Z2lmQymbPcAwcOYLVaWVtbQxTFm0+BdHRuB7/+9a8xmUyEw2G8
      Xi+vvfZa1lbgrbfeIhKJoGkaKysr/MVf/EXWVuDs2bNEo1HGx8epqanB7XZTVlaWOa6nQDr7
      AkmSMJvNmdGvXLzwwguUlJTgcDg4efJkzhRIEASsViuiKGI0Gq8brtZbAJ19wfPPP8/KygqK
      ohAKhXKmQIlEgmeeeYb5+fktX7J5+OGHmZubo6OjA6/XS0FBwabjegDo7AuGh4czM8CXLl2i
      rq4u65P9nXfeQZIkamtrOXo095Kds7OzeL1eAJaWlpBledOasXoKpLMvmJqaorCwkKqqKgoL
      cw+ju91uXnvtNQoLC3n77bdJJBJZbdfW1lBVlaqqKsrKyq5rWXbUAoRWl5ma99PQ1IRJFlFS
      CbxeL5rBRn1VKRNjoxjsBVSUFt3WTfJ07lyee+65zCbdBoMhp8juyJEjCIJAXV1dzvkCWH+F
      U1EUZFm+4ZZZO2oBhscnaawvZ2BgGFhftay0spaYb4Hp6TGkvBICS9Mk9IWxdLbJ1bKPhYWF
      nNqqRCLBxYsXuXjxIv/yL/9CIBDIarshKwFYXl6+Try3oxZAlCSMJgeasi6RMFttTAz3Izjc
      KPEQ+UV21FUTsXQagyjpC2Ox84WxtiuGg91bGEtRtpb1Zhbx2kZ9XH0tNhgdHaW3txdZlikp
      Kcm54FZ/fz82mw2n04kkSTl3slxZWeGTTz7BZDIhyzJPP/30JtuddYKVNMuL05hsBSwuLmJI
      hQioVhoqiklHJebm5ohH4lQYDUiSvjDWuu2dK4aT1O3YrtfHTsVww8PD/OEf/iGCIPDuu+9u
      8vVaNm5ik8mEx+PB6XRmte3u7uaFF17AZrPR29vLzMwM9fX1meM7CoD29jYWfAEONpQQDocx
      SlZcaT8+3woV1ZV4hEVkTwsGSe8B6GyPhoYG3nzzTQwGAwUFBTnz+sw2tqx3nnPt8NnR0cG7
      776bGS59/vnnNx3fUQDIRgsVZevLXG9s1VNTc+Wl+YIizw3/TkfnatS0Qjy0LrKrKa2ipvSK
      SC26ur6StDnPinhNa7W8vMzvf/97ZFmmuLj4hpshpn0+0DQKBIFXnnjiyoG1NdKAaHcgWsz6
      PIDO3hFaDvDJf3onp82T/9NLOIo2rz/0+eefc+rUKURR5KOPPiIcDl+3Z9r8//Lv0eKbZfxX
      U/CjP8f+5BN6AOjceTQ3N/Pmm29iMpkQBOEbrZKnB4DOHYGmacQ3NjmvraWytjZzLKEooCgY
      JQnpJt8i0wNA544glk7xv334fk6bPzv+II2FRTdVri6F0Lmn0QNA555GDwCde5odBcDijJeu
      ri4C0fXX0TQlzdClbvzBOGoiwtcXO/WFsXTuCHYUALPLKxzuaGN8eAhY14y43U4isRThtWWS
      qkypx4OoTwTr7HN2JoYTBBAkYF34JBvNmAwyUQXshRUcssUZGrjEgY5jmCR0MRy6GO5qNq7F
      Ta0AuI0V5zaL4rZXHzsKAAMKvT1d5LnLGR8fp7ykkNFxL2HVhlUsZ2nZT1IVkEQBSRJ1MRy6
      GO5qNq7FdpZW3yhX0rYud/Oumturjx0FQEvHMVRVRRRFNK0QQYD2ow9mnMgvcGdebtDR2c/s
      KAAEQchE78YrZrJ85Wa/0zdN0Ll30B/ROvc0egDo3NPoAaBzT6MHgM49jR4AOvc0egDo3NPs
      KABUVSEWT2ya/VSUNKqqARrJRILUbd7BXEdnJ+xoHqCv6yIGixnRUkhTTSmpeJjeri7ctR24
      DWEGJ5dRUkmOHT+GrAuCdPYxO2oBFFHmwME2ImuLABjMdhobahAAn89HfXMLRXlmwokrehZ9
      l8g7d5fIW63Z2W0t0LoeaBe1QJoGaGlu1IAYDTKJZIqUomKUxIyeRdcC6VqgDfaTFmhHLUCF
      x01Xdx+NBw8wNjpGPBJgYnqR5blxXKX1rMyMIFrzsRh0SYTO/mZHLUBRaRVFlxcxsl/eJfLQ
      kWOZ4y1th26Bazo6u48+DKpzT6MHgM49jR4AOvc0egDo3NPoAaBzT6MHgM49jR4AOvc0OwqA
      VCLCxOTMpun/pblpVkNRNDXNxPgoY94pfWEsnX3PjgKgp6ePfIfEpUEvACuzY6ymDIwO9hFd
      WyYp2qgsL9W3SNXZ9+woAESDAVdBKenE+vaUy8EoFZ5CCgxGIrKJRHCZ7p4+0qqqi+EytroY
      boP9JIbbUQBoikIiFkA0WAmHw+TbzPgDEUKqgkWQaTxwEJusklC0HYrhbkIkdRNiOFmWt2yV
      RFG64sM2xXCyLF+3A/n1tlf5sAtiOFmWt7U5RMZ2u2K4m60PeWvbHYnhtlHuhu26IG4XxXDN
      DbWMTS7ScqCBcDhMUWU9amiRkopaLCYDs94x8kqqsOliOJ19zo7EcDanmxanGwCPZ31HyJr6
      pszxhqYDt8A1HZ3dRx8G1bmn0QNA555GDwCde5odBUA8EmBweAzl8kyXpmnMeMdYWgmu/zw5
      xpI/sOWQo47OXrOjAOjrH6K6LJ9LA6MA+KZHSZrymRkfZnl2nITsZH5yhGR667FmHZ29ZMcT
      YRZ7AWoqAsBKJE5JQR5O2cB8OIw730We1UI0pa8NpLO/2dnCWOk00ZAfyeRgdXWVQoeVBX+A
      gJKiLM+Bb2WVYCyuzwPo7Ht2FABtLQeYXgjSdqAOVVUpKK/DnA5QVd9MYWktVjVEWU0TBlnv
      Y+vsbzITYVtqTq7CYLbRWG8DTSM/Px9N0yitqAHWO8SejZ9VFY2NDeQ0pC1WiVNVdd1W29pW
      07SMvSrkns/TtCvnp8lSTi3Ohr/aZR9y+SFwVbmClNMPFfEqWwEthwxAE8XMuQkCOX2QBCFT
      roqQ0wdBlK/YauT0AUDT1E3XIqct6/WBuo36QLhS19utZ1Xb8mm9YQvr55bzGl++boJ2WcUV
      iURuKghuhkgkgs1mu+W2iqJsezumm7GNRqOYzeZt7XG2cYNsdz+0jb3VtsN+uBb7wYfdslVV
      9UoLsN2T3AmqquJwOHbFdjduPACr1bqtC7mhAt1KDLdhe7PBstfXYr/4sBu2mqbtTAt0Kxju
      68YXSVNWVEBVTW3OlnBiZIC55QClnhKqamuRL9tee6Lh1SWGJmYxyhKabKbtYOP6nsY3sE1E
      1ugbGsdgMKBoAi2trRil7E4EfAuMjE3gKizEkldKeZEduP7G19QUl3p6QTaQSqSoP9CK02bK
      2F5tr2kKw/19JFQBJZ2ivKaR4vzsN5uaTtB3qZ+UaCTfYaO2tiZz7Nrzm/WOshyIIGgaeYUe
      aio8GX3ktbbLc5PMLK0iCQImRz5NdVU5tZRT48PMzC1TVFpGTV0thiz1EQv66R+dxCgbUEWZ
      1pYDmcWSr7VdXZplYnYZgyQgmR0cbKrL6u/K0gL2wiKGui4Sx8iRw4eylpuIBOgbGsNgMJBW
      BVrbWjBeVsIKgrBXAZAmkgCn1UQkFEIlV29cJRBOUOSyEwsFSaqQTRk7OTPP4cOHkUSBmcE+
      1pIKBaYbn+LczDSNrR04TBKrC5Ms+IJUlTizerG0vExlVQVroRChQBAuB8C1RJansZU2UFeS
      h5oK0z88g7O1/oa2qUgAzZxPe30lqCku9Y1QnN+S1YdkZA3J4UaKBQmFwlntQMUfjNHR0QGa
      th6Q5Z4sCmGNBV+Awx0dCILAUE8PSbUKU9YKUVkNRilxO4mGgsRVyDbYNzk9S9uhw5hkkUXv
      CL5QHI/TckPb2UUfhw93IAoCY709RBWwZSl3YdnPweIiXIWlmNIRVmIpim3GG9rOz0zT0NJB
      nlkisDTF/FKA6tL8zPE9CgCZqvIiJmcXKKuqyzzRb4xIXXU5Y95p3KWVWHNkJbXVFXR3dSLL
      EqLBRpkxu3F5ZQ39/d2IkowmyLS0VOb0uK6hkZHhEVKCkYMHSrPa2YqqiPddomdRJJ1WaTiQ
      /YY22FzIqTl6uldQVZWquqastgDmvGJcgQkWgylqGppzWIoU59vp6uxCFDRcxeU55PEC5SUF
      dHZ1IYkCVmcRxpwZhEh9bSWj45M4i8pw5KiPmuoq+nu6kGQZJBOtVeastpVlJXR1diFLAkZb
      fs56dudZ6OkfpdSdx9jsGkers9/GZVXV9A9cXc8V15zNnqCwtBLCIChMToyj5NRMqMwu+rGZ
      RGYmxknk6KdvpBgCAoIk5GzGBYF1O0FAEMUtc/jJCS9FRQWEA36m51Zy2oqCgCCul73V9giC
      IK5/P8KWPiTCfmKCFSUZZ2LCu0W56z6AgChs9VLNlesmbrmfg8b03DIOs4FZ7wTxnPVxuWwE
      xC1ewMnUhbC1D8VllZiUGIPDY1Q3NGVSmhv7IGyq52ufBHvUAgjEQz5M+eW40rEtbZVEiKTB
      SUmBKedLWuPeado7DiOLAtODfazmSIFmprzUHTyEwyyxOu9lfjlIZY4UyGyUGJmY5WBzLSvR
      7Bc8sjyFobCWA548lFSIgZEZ2lrqbmibiqyRlO20N1eBmuRS3xgF7Qezli1KBvxzIxRV1BMP
      rma1A5VFf3BTClThKcyaAs0u+OjoWE8/hnp6SFaU5UiBgFSUABbKCl05jMDrnaKlvWM9BZoY
      xheKU5IlBZqaXeDQ4Q4kQWC0t4eoUpU1BRoZGqCosp7aRgPeoQFsDgdO843reXbKS82BdpwW
      mbXFKeaW1vZDCiRSUlqGfy2EYLJu8fKaQElJKQu+VeKCAVEja3NeVe6hu6sTgyyhiibKc6RA
      peWV9Pd3IcsGFFWgpa0qpxfuohJWQnGmZ31U1DZktbMVVhLt7aVnSSaVSlPXnCMFsjoR4tP0
      dK+iKgplNdnLBTBY7BS5C4isLmKxF+SwFClwWjIpkL0gW/4PIFBS6KKrswvpcvqROwUSKPZ4
      mFv0E01L5Bonq6wo41JPFwZZRkWirTp7ClRW4qarswuDJCCaHDlToDy7jalJL1aTgUBCoTrH
      hGtpeQV9A91X1fO+SIHS+FdDCEgI6cQWqlGFBd8qAgJmQSWdw9Jsd3GguZn6+gaKjGl80exa
      pLW1IG2HOkjFIyTiMVJbCPe8k1OYJSitKMbny94B1RCpa2ymvr6eAwfqmZ+azmqbiofJL6nB
      aTWQSqeJRKI5fYiuLpIUjUgGG4loMIelRmFJOU1NjTQ0NhEL+HO836+RSIscrK8gEokTDYe3
      WAtAZX7RjwDYJI1UDluDxXG5PuopzTOwtJb9/OyuQg40N1Hf0IhNCRPMsdNHSUUNhU4bqgb1
      zQcw5QiAtdUgbYcOk45HSMSjJK95uX7POsElHg/hNR+R9FYvqkuUlJSQiATwBZNU5zCeHOxm
      VbNilQVCSwvUlGd/NTMcXMNkt5FXWIknT8C/FsLuyc9qX1RcgkEWGB2fpLw2e7lKYo1z53sp
      Ky0CFGLJ7JdYSSVZCyZRkhr333eMvv5hwJPV3mx3UUAK3+wEkjVXCwBff3EeV+F6WUsra2Rv
      h2BtdQXiMi3HH8A/2k9SA3PW6yxSXFJCOh5i3h+hIscjdG6sn/mYhMMkEV314TlYltV2qPdr
      0iYXRhFWF5bJzzEeMD7cj9lVSmWhCe/wEIbWDvKypLrhYABjngN7QTnlBQaWV0I4yq5cuz2b
      B4iH14gmVZwF+Vt2FNVEhLVIgjxXfs4Ro/rWDiJxsNtMxCpKUXO05RXVNUxMzuCprCURWcVT
      mD3/B7CaZUYmZpBNFlx51qx2BmsBDz5w7PLkkYrfv5bV1mTPx+SfQMsrIJ2M4y7OfvMDCLKJ
      1cUJFEHCnZ89WEHg8NH7MdsdSAJ4/P6cD5ny0mLmlwN4ZIGI05U7/wdIx/EHY+Q5XZk5gBtR
      1dxGQVTBYTeTiARJijceqgQ40H6UNAYsJplwmQdDDh/MZhOrq37SCROxlIohRye4vLqaickZ
      SipqiMfW8BRv7rfs2ShQMJqmtbWVsH8+ZzMKKr5AhPa2Ngj5ieRQWC8vLmO0yFy8cJ6uIS+m
      HBNbiXiMitoGZkcvMTY5s2UKNDU9S9PBNg7UlTA2Npvd22SEYEzBO9LPl198QVzNoc1BxWBx
      YtEifN3dRyyRzOlDPLCM6CimtbWVhRlvDkuN1UCAZGCZ859fYHYpV4cZ4imFxvoKLn5+jgVf
      YIsldTSWVoK0tbZiiK0RzJGTriwtI5tkur+6QOelYQw5ljaZmp7Fcvkpbs93Y8rRByirbqSh
      ugKnM5/WlmaEHP4mEzHKaxqYH+9n1DtDMrW5nm97AKjpJMODw0SjYQYHB0liyNGRUhkbGiIa
      jTIwMEAgSc6nk281gFGE0so66t02VhPZo8Xv82EwyLhLKmhtqMC/mj2n9i3MEI7EGBrsZ2R8
      mjxX9tYitLyAZjRjsrm4774jBJYWs9omo0HiKRXZaOXo8WPEAtmHV5PREN65ZVbmpxgcHEI2
      55KuqAQDITTg4KEjGNREDltYWwsgCFDX3Eq+QSOe9YZS8Y4OX66PQXwxFUuOG9W3uopREigu
      q6a5ws1KOJ7ddn6KL7/8ki+//JKvO3tI5ngeLc1NMjQyyuSkl84vPmc1nj0K/cs+ZKNMQXE5
      7U1VrKwENh2/7SmQKBtpOpB9qO8aa+qbD3LjedTrKc6309k7RKHTyqQvzPHa7LVTVOTmUm8v
      JYX5DIwtcLDjaFbbQk8FhZ6KrMevJq+4nKHOXjylHno6e3FXZU9mjVYngaFOpKJSlvp6Medn
      n2AzWh0cbG3flg8gIZNg2hfGoPlJCtlTDxCwGUWGvfPYjQIrSajNkf/XNDRTs00vSgqcdPcO
      UJTvYHjeR8fR6qy2xeU11NbdeLj4WoyCSkFpLcVOE2uzppy2RcWF9F+u5/6RBZoPba7njBp0
      NwkEAjiduXPsndjeiGQiRiSWREnEsLuLMecYIUinEoTCUQQ1jWx1Yres3yihUGjbYrgboaoK
      wUAQSRJIKiLu/LystpqmEgwEECWJWCJNceGVDto3uRaaphGNhFA0gWgkSklJSc45lFg0TDKt
      EY+GKSwpZSN7/Kb1kUrGCUfiaOkEZqcbq/HGz9zxsTFqayuYmvJTXZO9swywvLREYVERgiCg
      plNoopxTrp1OJQmFIwhqGsnqxGG58kDYs07wbhAO+JmcnsO/MEdJ8xHcOfoAsUgA7+Q0gaV5
      zGUHOFRQeEt8UFIJJiYmiMaj+FYSnDhxf1ZbVUkz5R0nGI2ytBTgkRMP3xIfQGNpbpol/xrz
      C4vc92CucjX8S/PMLfqYn5un4/iDtywvjoRWmZyaZXV+BmfDYVoKsz9QQoFVFhcNzM8vY7Ea
      cRcVkq36ZifHmF9YuPybSOPBFixZAiAeCTIxOUVweQGDp5GOxs31fFcFwNqKj7QKRqOJ4iJ3
      TttwYJVYUsEgGyguKbplK1mn4xFWg1FsdiOFhY6cIxSqksS/EsBit1LgLsSc5el482gsLy8j
      yGbseS6cdmvOp79/eRmQsNjycLscWy2Jum2Cqysk0yoGg3HLa9zQ2Eg0nqS+oWrL91KMVgf1
      DY2Z3w05hgY36lmWjRSXFF834njXpUAAkeAKk9Pz1DQdxJprPA2IR4N4vTOU1tTjtK7nk980
      BQJQ0km8ExNYXcWUFuUasgRVTTM96UUwOqgqL8l8/o2vhaaxtDDDaiRNU31t7htb01jxLbC4
      EqaxsZGNzPFW1EcsvIZ3apbKumbsWSQL6WScmZkZ5mbnsLtLaDnQTLbsdW52lrLyUlb8AQrc
      ua/tBoloiInJaTxVdbhsV2ak76oWYHVxBu+8D5e7BCWRfcQBILK2zNDELHZnAaKWzKxx9E3R
      0nG6uvsRTFZKXQaiiewjFJqa5lJvLwoyFZ58fKHcw6A3w/hwH8FIgrLKaiKRhZy2MxMj+AJh
      SsoqiYVzyaxvjqBvntGZRZz5RWipBGqO8dX+nq9JGfNxOZ3UN2e/+WE9KMvKi1lcXN4yAKKB
      ZQbHZ7A53Uha6rp6vqveWp/3BThy+DALE/146ppzPv0XF5Zoae8gsjSJpbCaAnt2ncrNEFic
      obi+hRJDgumITE1FUVbbRHgNa34ZtSUO+idXaG7ILcnePgrxlERHRwudX3bS2nowx9NfIxhN
      0tHRTn/n1zS3tee8+W6GuaUVOg514J8ZoaCigTyzIavtoeOP0NZQhShLDA8OksqRBeXZTPT1
      DRGNhejrGyCeYw5ncWGJA+2HiS1PYSqoxO3YLMa7qwLAapLo6+tDMNpYmp3OeWEsFjMjg/0k
      MRDwzROK3Zqnr9HiYHFyhPlADCkZZskfyGorGYwElmfxzvmwyiqzC75b4gOsT8j1D4zgzHcw
      NTWTU98jaWn6+wexOV1MT05uIU/fPjazgYGBflTJjH9hhmgye2sYWl1maHQCT1U9FknNub1W
      eXU9zU1NlLhdpFLpnOdmsZgZHewnockEfQvX1fNd2Qf4ptyKPsCtYD9ci9vlw6XeHg62tPDp
      B/+NpsMPUlGSXes00tdJMGXAlI5QcegBXLmmObbgrmoBdO5ctFScwcEhBIOZ4IovZwpU19yC
      0yITjceZGh8juY3tnrJxV3WCde5c2o+uz5e0trZuaSuKBjxl5dQ0NBHyzZNIa+R49SMnegDo
      3HFMDPehyFb8y4tIJjtHi3PPHOdCT4F07jiiCQV3QT6pVIra6oqtNvPMiR4AOncctbU1xONx
      6hsaSSYS3ygA/n+ugtTCvSLK2AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='RAFT_APDVS' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='RAFT_NO_APDVS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='RAG' width='192'>
      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
      /H+1bQL9zL3vLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='RAG_APDVS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='RAG_NO_APDVS' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
